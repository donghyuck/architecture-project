architecture.ee.web.attachment.AbstractAttachmentManager -> architecture.ee.web.attachment.AbstractAttachmentManager:
    org.apache.commons.logging.Log log -> log
    architecture.common.event.api.EventPublisher eventPublisher -> a
    28:30:void <init>() -> <init>
    35:35:architecture.common.event.api.EventPublisher getEventPublisher() -> getEventPublisher
    39:40:void setEventPublisher(architecture.common.event.api.EventPublisher) -> setEventPublisher
    43:47:java.lang.String listToString(java.util.List) -> listToString
    51:57:java.util.List stringToList(java.lang.String) -> stringToList
architecture.ee.web.attachment.Attachment -> architecture.ee.web.attachment.Attachment:
    long getAttachmentId() -> getAttachmentId
    void setAttachmentId(long) -> setAttachmentId
    int getObjectType() -> getObjectType
    void setObjectType(int) -> setObjectType
    long getObjectId() -> getObjectId
    void setObjectId(long) -> setObjectId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    int getSize() -> getSize
    void setSize(int) -> setSize
    java.lang.String getContentType() -> getContentType
    void setContentType(java.lang.String) -> setContentType
    int getDownloadCount() -> getDownloadCount
    void setDownloadCount(int) -> setDownloadCount
    void setInputStream(java.io.InputStream) -> setInputStream
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.Integer getThumbnailSize() -> getThumbnailSize
    void setThumbnailSize(java.lang.Integer) -> setThumbnailSize
    void setThumbnailContentType(java.lang.String) -> setThumbnailContentType
    java.lang.String getThumbnailContentType() -> getThumbnailContentType
    architecture.common.user.User getUser() -> getUser
    void setUser(architecture.common.user.User) -> setUser
architecture.ee.web.attachment.AttachmentConfig -> architecture.ee.web.attachment.AttachmentConfig:
    long typeId -> a
    boolean attachmentsEnabled -> a
    int maxAttachmentSize -> a
    int maxAttachmentsPerDocument -> b
    int maxAttachmentsPerMessage -> c
    int maxAttachmentsPerBlogPost -> d
    java.util.List allowedTypes -> a
    java.util.List disallowedTypes -> b
    boolean allowAllByDefault -> b
    boolean imagePreviewEnabled -> c
    int imagePreviewMaxSize -> e
    boolean imagePreviewRatioEnabled -> d
    20:20:void <init>() -> <init>
    36:36:long getTypeId() -> getTypeId
    40:41:void setTypeId(long) -> setTypeId
    45:45:boolean isAttachmentsEnabled() -> isAttachmentsEnabled
    50:51:void setAttachmentsEnabled(boolean) -> setAttachmentsEnabled
    55:55:int getMaxAttachmentSize() -> getMaxAttachmentSize
    60:61:void setMaxAttachmentSize(int) -> setMaxAttachmentSize
    65:65:int getMaxAttachmentsPerDocument() -> getMaxAttachmentsPerDocument
    70:71:void setMaxAttachmentsPerDocument(int) -> setMaxAttachmentsPerDocument
    75:75:int getMaxAttachmentsPerBlogPost() -> getMaxAttachmentsPerBlogPost
    80:81:void setMaxAttachmentsPerBlogPost(int) -> setMaxAttachmentsPerBlogPost
    85:85:java.util.List getAllowedTypes() -> getAllowedTypes
    90:91:void setAllowedTypes(java.util.List) -> setAllowedTypes
    95:95:java.util.List getDisallowedTypes() -> getDisallowedTypes
    100:101:void setDisallowedTypes(java.util.List) -> setDisallowedTypes
    105:105:boolean isAllowAllByDefault() -> isAllowAllByDefault
    110:111:void setAllowAllByDefault(boolean) -> setAllowAllByDefault
    115:115:boolean isImagePreviewEnabled() -> isImagePreviewEnabled
    120:121:void setImagePreviewEnabled(boolean) -> setImagePreviewEnabled
    125:125:int getMaxAttachmentsPerMessage() -> getMaxAttachmentsPerMessage
    130:131:void setMaxAttachmentsPerMessage(int) -> setMaxAttachmentsPerMessage
    135:135:int getImagePreviewMaxSize() -> getImagePreviewMaxSize
    140:141:void setImagePreviewMaxSize(int) -> setImagePreviewMaxSize
    145:145:boolean isImagePreviewRatioEnabled() -> isImagePreviewRatioEnabled
    150:151:void setImagePreviewRatioEnabled(boolean) -> setImagePreviewRatioEnabled
    155:182:boolean equals(java.lang.Object) -> equals
    187:199:int hashCode() -> hashCode
    204:219:java.lang.String toString() -> toString
architecture.ee.web.attachment.AttachmentManager -> architecture.ee.web.attachment.AttachmentManager:
    architecture.ee.web.attachment.Attachment getAttachment(long) -> getAttachment
    java.util.List getAttachments(int,long) -> getAttachments
    architecture.ee.web.attachment.Attachment createAttachment(int,long,java.lang.String,java.lang.String,java.io.File) -> createAttachment
    architecture.ee.web.attachment.Attachment createAttachment(int,long,java.lang.String,java.lang.String,java.io.InputStream) -> createAttachment
    architecture.ee.web.attachment.Attachment createAttachment(int,long,java.lang.String,java.lang.String,java.io.InputStream,int) -> createAttachment
    architecture.ee.web.attachment.Attachment saveAttachment(architecture.ee.web.attachment.Attachment) -> saveAttachment
    void removeAttachment(architecture.ee.web.attachment.Attachment) -> removeAttachment
    java.io.InputStream getAttachmentInputStream(architecture.ee.web.attachment.Attachment) -> getAttachmentInputStream
    java.io.InputStream getAttachmentImageThumbnailInputStream(architecture.ee.web.attachment.Attachment,int,int) -> getAttachmentImageThumbnailInputStream
    int getTotalAttachmentCount(int,long) -> getTotalAttachmentCount
    long getUsage(int,long) -> getUsage
architecture.ee.web.attachment.DefaultAttachmentManager -> architecture.ee.web.attachment.DefaultAttachmentManager:
    architecture.ee.web.attachment.dao.AttachmentDao attachmentDao -> a
    net.sf.ehcache.Cache attachmentCache -> a
    java.io.File attachmentDir -> a
    47:47:void <init>() -> <init>
    56:56:architecture.ee.web.attachment.dao.AttachmentDao getAttachmentDao() -> getAttachmentDao
    60:61:void setAttachmentDao(architecture.ee.web.attachment.dao.AttachmentDao) -> setAttachmentDao
    64:64:net.sf.ehcache.Cache getAttachmentCache() -> getAttachmentCache
    68:69:void setAttachmentCache(net.sf.ehcache.Cache) -> setAttachmentCache
    72:80:java.io.File getAttachmentDir() -> getAttachmentDir
    85:94:architecture.ee.web.attachment.Attachment getAttachment(long) -> getAttachment
    98:98:java.util.List getAttachments(int,long) -> getAttachments
    102:105:architecture.ee.web.attachment.Attachment getAttachmentInCache(long) -> getAttachmentInCache
    110:121:architecture.ee.web.attachment.Attachment createAttachment(int,long,java.lang.String,java.lang.String,java.io.File) -> createAttachment
    127:138:architecture.ee.web.attachment.Attachment createAttachment(int,long,java.lang.String,java.lang.String,java.io.InputStream) -> createAttachment
    144:151:architecture.ee.web.attachment.Attachment createAttachment(int,long,java.lang.String,java.lang.String,java.io.InputStream,int) -> createAttachment
    157:183:architecture.ee.web.attachment.Attachment saveAttachment(architecture.ee.web.attachment.Attachment) -> saveAttachment
    189:192:java.io.InputStream getAttachmentInputStream(architecture.ee.web.attachment.Attachment) -> getAttachmentInputStream
    197:215:java.io.File getAttachmentFromCacheIfExist(architecture.ee.web.attachment.Attachment) -> getAttachmentFromCacheIfExist
    219:223:java.io.File getAttachmentCacheDir() -> getAttachmentCacheDir
    227:229:void initialize() -> initialize
    233:233:void destroy() -> destroy
    238:241:java.io.InputStream getAttachmentImageThumbnailInputStream(architecture.ee.web.attachment.Attachment,int,int) -> getAttachmentImageThumbnailInputStream
    248:251:java.io.InputStream getImageThumbnailInputStream(architecture.ee.web.attachment.Attachment,int,int) -> getImageThumbnailInputStream
    257:289:java.io.File getThumbnailFromCacheIfExist(architecture.ee.web.attachment.Attachment,int,int) -> getThumbnailFromCacheIfExist
    293:295:java.lang.String toThumbnailFilename(architecture.ee.web.attachment.Attachment,int,int) -> toThumbnailFilename
    300:306:void removeAttachment(architecture.ee.web.attachment.Attachment) -> removeAttachment
    309:309:int getTotalAttachmentCount(int,long) -> getTotalAttachmentCount
    313:313:long getUsage(int,long) -> getUsage
architecture.ee.web.attachment.DefaultImageManager -> architecture.ee.web.attachment.DefaultImageManager:
    architecture.common.lifecycle.ConfigService configService -> a
    java.util.concurrent.locks.Lock lock -> a
    architecture.ee.web.attachment.ImageConfig imageConfig -> a
    architecture.ee.web.attachment.dao.ImageDao imageDao -> a
    architecture.ee.web.attachment.dao.ImageLinkDao imageLinkDao -> a
    net.sf.ehcache.Cache imageLinkIdCache -> a
    net.sf.ehcache.Cache imageLinkCache -> b
    net.sf.ehcache.Cache imageCache -> c
    java.io.File imageDir -> a
    49:53:void <init>() -> <init>
    66:67:void setConfigService(architecture.common.lifecycle.ConfigService) -> setConfigService
    73:73:net.sf.ehcache.Cache getImageLinkIdCache() -> getImageLinkIdCache
    81:82:void setImageLinkIdCache(net.sf.ehcache.Cache) -> setImageLinkIdCache
    88:88:architecture.ee.web.attachment.dao.ImageLinkDao getImageLinkDao() -> getImageLinkDao
    96:97:void setImageLinkDao(architecture.ee.web.attachment.dao.ImageLinkDao) -> setImageLinkDao
    103:103:net.sf.ehcache.Cache getImageLinkCache() -> getImageLinkCache
    111:112:void setImageLinkCache(net.sf.ehcache.Cache) -> setImageLinkCache
    115:115:architecture.ee.web.attachment.ImageConfig getImageConfig() -> getImageConfig
    119:120:void setImageConfig(architecture.ee.web.attachment.ImageConfig) -> setImageConfig
    123:123:architecture.ee.web.attachment.dao.ImageDao getImageDao() -> getImageDao
    127:128:void setImageDao(architecture.ee.web.attachment.dao.ImageDao) -> setImageDao
    131:131:boolean isImageEnabled() -> isImageEnabled
    135:138:void setImageEnabled(boolean) -> setImageEnabled
    141:141:int getMaxImageSize() -> getMaxImageSize
    145:148:void setMaxImageSize(int) -> setMaxImageSize
    151:151:int getImagePreviewMaxSize() -> getImagePreviewMaxSize
    155:158:void setImagePreviewMaxSize(int) -> setImagePreviewMaxSize
    161:161:boolean isForceThumbnailsEnabled() -> isForceThumbnailsEnabled
    165:168:void setFourceThumbnailsEnabled(boolean) -> setFourceThumbnailsEnabled
    171:171:int getImageMaxWidth() -> getImageMaxWidth
    175:178:void setImageMaxWidth(int) -> setImageMaxWidth
    181:181:int getImageMaxHeight() -> getImageMaxHeight
    185:188:void setImageMaxHeight(int) -> setImageMaxHeight
    192:196:boolean isValidType(java.lang.String) -> isValidType
    200:200:java.util.List getDisallowedTypes() -> getDisallowedTypes
    204:209:void addDisallowedType(java.lang.String) -> addDisallowedType
    212:217:void removeDisallowedType(java.lang.String) -> removeDisallowedType
    220:225:void addAllowedType(java.lang.String) -> addAllowedType
    228:233:void removeAllowedType(java.lang.String) -> removeAllowedType
    236:236:java.util.List getAllowedTypes() -> getAllowedTypes
    240:240:boolean isAllowAllByDefault() -> isAllowAllByDefault
    244:247:void setAllowAllByDefault(boolean) -> setAllowAllByDefault
    251:257:void deleteImage(architecture.ee.web.attachment.Image) -> deleteImage
    260:276:architecture.ee.web.attachment.Image createImage(int,long,java.lang.String,java.lang.String,java.io.File) -> createImage
    280:296:architecture.ee.web.attachment.Image createImage(int,long,java.lang.String,java.lang.String,java.io.InputStream) -> createImage
    301:312:architecture.ee.web.attachment.Image createImage(int,long,java.lang.String,java.lang.String,java.io.InputStream,int) -> createImage
    318:338:void saveOrUpdate(architecture.ee.web.attachment.Image) -> saveOrUpdate
    344:361:architecture.ee.web.attachment.Image saveImage(architecture.ee.web.attachment.Image) -> saveImage
    366:378:void deleteImageFileCache(architecture.ee.web.attachment.Image) -> a
    381:393:architecture.ee.web.attachment.Image getImage(long) -> getImage
    398:401:architecture.ee.web.attachment.Image getImageById(long) -> a
    406:406:net.sf.ehcache.Cache getImageCache() -> getImageCache
    410:411:void setImageCache(net.sf.ehcache.Cache) -> setImageCache
    414:432:java.io.File getImageDir() -> getImageDir
    437:440:java.io.InputStream getImageInputStream(architecture.ee.web.attachment.Image) -> getImageInputStream
    446:450:java.io.InputStream getImageThumbnailInputStream(architecture.ee.web.attachment.Image,int,int) -> getImageThumbnailInputStream
    463:482:java.io.File getImageFromCacheIfExist(architecture.ee.web.attachment.Image) -> getImageFromCacheIfExist
    486:490:java.io.File getImageCacheDir() -> getImageCacheDir
    494:498:java.io.File getImageTempDir() -> getImageTempDir
    502:504:java.lang.String toThumbnailFilename(architecture.ee.web.attachment.Image,int,int) -> toThumbnailFilename
    508:510:java.io.File getTemeFile() -> getTemeFile
    515:557:java.io.File getThumbnailFromCacheIfExist(architecture.ee.web.attachment.Image,int,int) -> getThumbnailFromCacheIfExist
    564:564:void destroy() -> destroy
    567:583:void initialize() -> initialize
    586:594:java.util.List getImages(int,long) -> getImages
    598:606:java.util.List getImages(int,long,int,int) -> getImages
    610:610:int getTotalImageCount(int,long) -> getTotalImageCount
    616:625:void updateImageProperties(architecture.ee.web.attachment.Image) -> updateImageProperties
    628:641:architecture.ee.web.attachment.Image getImageByImageLink(java.lang.String) -> getImageByImageLink
    645:658:architecture.ee.web.attachment.ImageLink getImageLink(architecture.ee.web.attachment.Image) -> getImageLink
    664:672:architecture.ee.web.attachment.ImageLink getImageLink(architecture.ee.web.attachment.Image,boolean) -> getImageLink
    679:685:void removeImageLink(architecture.ee.web.attachment.Image) -> removeImageLink
    688:688:long getUsage(int,long) -> getUsage
architecture.ee.web.attachment.FileInfo -> architecture.ee.web.attachment.FileInfo:
    java.lang.String fileParameterName -> a
    java.lang.String name -> b
    java.lang.String contentType -> c
    java.io.File file -> a
    28:28:java.lang.String getFileParameterName() -> getFileParameterName
    32:33:void setFileParameterName(java.lang.String) -> setFileParameterName
    36:36:java.lang.String getName() -> getName
    40:41:void setName(java.lang.String) -> setName
    44:44:java.lang.String getContentType() -> getContentType
    48:49:void setContentType(java.lang.String) -> setContentType
    52:52:java.io.File getFile() -> getFile
    56:57:void setFile(java.io.File) -> setFile
    60:64:void <init>(java.lang.String,java.lang.String,java.io.File) -> <init>
architecture.ee.web.attachment.Image -> architecture.ee.web.attachment.Image:
    long getImageId() -> getImageId
    int getObjectType() -> getObjectType
    long getObjectId() -> getObjectId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getContentType() -> getContentType
    int getSize() -> getSize
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.Integer getThumbnailSize() -> getThumbnailSize
    void setThumbnailSize(java.lang.Integer) -> setThumbnailSize
    void setThumbnailContentType(java.lang.String) -> setThumbnailContentType
    java.lang.String getThumbnailContentType() -> getThumbnailContentType
    architecture.common.user.User getUser() -> getUser
    void setUser(architecture.common.user.User) -> setUser
architecture.ee.web.attachment.ImageConfig -> architecture.ee.web.attachment.ImageConfig:
    boolean enabled -> a
    int maxImageSize -> a
    int imagePreviewMaxSize -> b
    int imageMaxWidth -> c
    int imageMaxHeight -> d
    int maxImagesPerObject -> e
    boolean allowAllByDefault -> b
    java.util.List allowedTypes -> a
    java.util.List disallowedTypes -> b
    boolean forceThumbnailsEnabled -> c
    33:37:void <init>() -> <init>
    40:40:boolean isEnabled() -> isEnabled
    44:45:void setEnabled(boolean) -> setEnabled
    48:48:int getMaxImageSize() -> getMaxImageSize
    52:53:void setMaxImageSize(int) -> setMaxImageSize
    56:56:int getImagePreviewMaxSize() -> getImagePreviewMaxSize
    60:61:void setImagePreviewMaxSize(int) -> setImagePreviewMaxSize
    64:64:int getImageMaxWidth() -> getImageMaxWidth
    68:69:void setImageMaxWidth(int) -> setImageMaxWidth
    72:72:int getImageMaxHeight() -> getImageMaxHeight
    76:77:void setImageMaxHeight(int) -> setImageMaxHeight
    80:80:int getMaxImagesPerObject() -> getMaxImagesPerObject
    84:85:void setMaxImagesPerObject(int) -> setMaxImagesPerObject
    90:90:boolean isAllowAllByDefault() -> isAllowAllByDefault
    96:97:void setAllowAllByDefault(boolean) -> setAllowAllByDefault
    102:102:java.util.List getAllowedTypes() -> getAllowedTypes
    108:109:void setAllowedTypes(java.util.List) -> setAllowedTypes
    114:114:java.util.List getDisallowedTypes() -> getDisallowedTypes
    120:121:void setDisallowedTypes(java.util.List) -> setDisallowedTypes
    126:126:boolean isForceThumbnailsEnabled() -> isForceThumbnailsEnabled
    132:133:void setForceThumbnailsEnabled(boolean) -> setForceThumbnailsEnabled
    139:163:boolean equals(java.lang.Object) -> equals
    168:178:int hashCode() -> hashCode
    183:196:java.lang.String toString() -> toString
architecture.ee.web.attachment.ImageLink -> architecture.ee.web.attachment.ImageLink:
    java.lang.Long imageId -> a
    java.lang.String linkId -> a
    boolean publicShared -> a
    23:39:void <init>(java.lang.String,java.lang.Long,boolean) -> <init>
    45:45:java.lang.Long getImageId() -> getImageId
    52:52:java.lang.String getLinkId() -> getLinkId
    59:59:boolean isPublicShared() -> isPublicShared
    63:63:int getCachedSize() -> getCachedSize
    68:75:java.lang.String toString() -> toString
architecture.ee.web.attachment.ImageManager -> architecture.ee.web.attachment.ImageManager:
    boolean isImageEnabled() -> isImageEnabled
    void setImageEnabled(boolean) -> setImageEnabled
    architecture.ee.web.attachment.Image getImage(long) -> getImage
    int getMaxImageSize() -> getMaxImageSize
    void setMaxImageSize(int) -> setMaxImageSize
    int getImagePreviewMaxSize() -> getImagePreviewMaxSize
    void setImagePreviewMaxSize(int) -> setImagePreviewMaxSize
    boolean isForceThumbnailsEnabled() -> isForceThumbnailsEnabled
    void setFourceThumbnailsEnabled(boolean) -> setFourceThumbnailsEnabled
    int getImageMaxWidth() -> getImageMaxWidth
    void setImageMaxWidth(int) -> setImageMaxWidth
    int getImageMaxHeight() -> getImageMaxHeight
    void setImageMaxHeight(int) -> setImageMaxHeight
    boolean isValidType(java.lang.String) -> isValidType
    void addAllowedType(java.lang.String) -> addAllowedType
    void removeAllowedType(java.lang.String) -> removeAllowedType
    java.util.List getAllowedTypes() -> getAllowedTypes
    boolean isAllowAllByDefault() -> isAllowAllByDefault
    void setAllowAllByDefault(boolean) -> setAllowAllByDefault
    java.util.List getDisallowedTypes() -> getDisallowedTypes
    void addDisallowedType(java.lang.String) -> addDisallowedType
    void removeDisallowedType(java.lang.String) -> removeDisallowedType
    architecture.ee.web.attachment.Image createImage(int,long,java.lang.String,java.lang.String,java.io.File) -> createImage
    architecture.ee.web.attachment.Image createImage(int,long,java.lang.String,java.lang.String,java.io.InputStream) -> createImage
    architecture.ee.web.attachment.Image createImage(int,long,java.lang.String,java.lang.String,java.io.InputStream,int) -> createImage
    void saveOrUpdate(architecture.ee.web.attachment.Image) -> saveOrUpdate
    architecture.ee.web.attachment.Image saveImage(architecture.ee.web.attachment.Image) -> saveImage
    void updateImageProperties(architecture.ee.web.attachment.Image) -> updateImageProperties
    java.io.InputStream getImageInputStream(architecture.ee.web.attachment.Image) -> getImageInputStream
    java.io.InputStream getImageThumbnailInputStream(architecture.ee.web.attachment.Image,int,int) -> getImageThumbnailInputStream
    long getUsage(int,long) -> getUsage
    java.util.List getImages(int,long) -> getImages
    java.util.List getImages(int,long,int,int) -> getImages
    int getTotalImageCount(int,long) -> getTotalImageCount
    architecture.ee.web.attachment.Image getImageByImageLink(java.lang.String) -> getImageByImageLink
    architecture.ee.web.attachment.ImageLink getImageLink(architecture.ee.web.attachment.Image) -> getImageLink
    architecture.ee.web.attachment.ImageLink getImageLink(architecture.ee.web.attachment.Image,boolean) -> getImageLink
    void removeImageLink(architecture.ee.web.attachment.Image) -> removeImageLink
architecture.ee.web.attachment.ThumbnailSize -> architecture.ee.web.attachment.ThumbnailSize:
    architecture.ee.web.attachment.ThumbnailSize CUSTOM_PROFILE -> CUSTOM_PROFILE
    architecture.ee.web.attachment.ThumbnailSize CUSTOM_LISTVIEW -> CUSTOM_LISTVIEW
    architecture.ee.web.attachment.ThumbnailSize PICO -> PICO
    architecture.ee.web.attachment.ThumbnailSize NANO -> NANO
    architecture.ee.web.attachment.ThumbnailSize MICRO -> MICRO
    architecture.ee.web.attachment.ThumbnailSize TINY -> TINY
    architecture.ee.web.attachment.ThumbnailSize SMALL -> SMALL
    architecture.ee.web.attachment.ThumbnailSize NORMAL -> NORMAL
    architecture.ee.web.attachment.ThumbnailSize LARGE -> LARGE
    architecture.ee.web.attachment.ThumbnailSize MEGA -> MEGA
    architecture.ee.web.attachment.ThumbnailSize GIGA -> GIGA
    int dimension -> a
    architecture.ee.web.attachment.ThumbnailSize[] $VALUES -> a
    18:18:architecture.ee.web.attachment.ThumbnailSize[] values() -> values
    18:18:architecture.ee.web.attachment.ThumbnailSize valueOf(java.lang.String) -> valueOf
    79:81:void <init>(java.lang.String,int,int) -> <init>
    84:84:int getDimension() -> getDimension
    18:75:void <clinit>() -> <clinit>
architecture.ee.web.attachment.dao.AttachmentDao -> architecture.ee.web.attachment.dao.AttachmentDao:
    void insertAttachmentDownloads(java.util.List) -> insertAttachmentDownloads
    java.util.List getAllAttachmentIds() -> getAllAttachmentIds
    int getAttachmentCount(int,long) -> getAttachmentCount
    void deleteAttachmentData() -> deleteAttachmentData
    void deleteAttachmentData(architecture.ee.web.attachment.Attachment) -> deleteAttachmentData
    architecture.ee.web.attachment.Attachment createAttachment(architecture.ee.web.attachment.Attachment) -> createAttachment
    void updateAttachment(architecture.ee.web.attachment.Attachment) -> updateAttachment
    void deleteAttachment(architecture.ee.web.attachment.Attachment) -> deleteAttachment
    java.io.InputStream getAttachmentData(architecture.ee.web.attachment.Attachment) -> getAttachmentData
    void saveAttachmentData(architecture.ee.web.attachment.Attachment,java.io.InputStream) -> saveAttachmentData
    architecture.ee.web.attachment.Attachment getByAttachmentId(long) -> getByAttachmentId
    java.util.List getByObjectTypeAndObjectId(int,long) -> getByObjectTypeAndObjectId
    long getAttachmentUsage(int,long) -> getAttachmentUsage
architecture.ee.web.attachment.dao.AttachmentDao$AttachmentDownloadItem -> architecture.ee.web.attachment.dao.AttachmentDao$AttachmentDownloadItem:
    long attachmentId -> a
    java.util.Date downloadDate -> a
    boolean downloadCompleted -> a
    19:23:void <init>(long,java.util.Date,boolean) -> <init>
    27:27:long getAttachmentId() -> getAttachmentId
    32:32:java.util.Date getDownloadDate() -> getDownloadDate
    37:37:boolean isDownloadCompleted() -> isDownloadCompleted
architecture.ee.web.attachment.dao.ImageDao -> architecture.ee.web.attachment.dao.ImageDao:
    architecture.ee.web.attachment.Image createImage(architecture.ee.web.attachment.Image) -> createImage
    architecture.ee.web.attachment.Image updateImage(architecture.ee.web.attachment.Image) -> updateImage
    void deleteImage(architecture.ee.web.attachment.Image) -> deleteImage
    java.io.InputStream getImageInputStream(architecture.ee.web.attachment.Image) -> getImageInputStream
    void saveImageInputStream(architecture.ee.web.attachment.Image,java.io.InputStream) -> saveImageInputStream
    architecture.ee.web.attachment.Image getImageById(long) -> getImageById
    java.util.List getImageIds(int,long,int,int) -> getImageIds
    java.util.List getImageIds(int,long) -> getImageIds
    int getImageCount(int,long) -> getImageCount
    long getImageUsage(int,long) -> getImageUsage
architecture.ee.web.attachment.dao.ImageLinkDao -> architecture.ee.web.attachment.dao.ImageLinkDao:
    architecture.ee.web.attachment.ImageLink getImageLinkByImageId(java.lang.Long) -> getImageLinkByImageId
    architecture.ee.web.attachment.ImageLink getImageLink(java.lang.String) -> getImageLink
    void saveImageLink(architecture.ee.web.attachment.ImageLink) -> saveImageLink
    void removeImageLink(architecture.ee.web.attachment.ImageLink) -> removeImageLink
    void removeImageLink(architecture.ee.web.attachment.Image) -> removeImageLink
architecture.ee.web.attachment.dao.impl.JdbcAttachmentDao -> architecture.ee.web.attachment.dao.impl.JdbcAttachmentDao:
    org.springframework.jdbc.core.RowMapper attachmentMapper -> a
    architecture.ee.jdbc.property.dao.ExtendedPropertyDao extendedPropertyDao -> a
    java.lang.String sequencerName -> a
    java.lang.String attachmentPropertyTableName -> b
    java.lang.String attachmentPropertyPrimaryColumnName -> c
    25:65:void <init>() -> <init>
    45:59:void insertAttachmentDownloads(java.util.List) -> insertAttachmentDownloads
    68:69:void setExtendedPropertyDao(architecture.ee.jdbc.property.dao.ExtendedPropertyDao) -> setExtendedPropertyDao
    73:73:java.lang.String getSequencerName() -> getSequencerName
    78:79:void setSequencerName(java.lang.String) -> setSequencerName
    82:82:architecture.ee.jdbc.property.dao.ExtendedPropertyDao getExtendedPropertyDao() -> getExtendedPropertyDao
    87:87:java.lang.String getAttachmentPropertyTableName() -> getAttachmentPropertyTableName
    92:93:void setAttachmentPropertyTableName(java.lang.String) -> setAttachmentPropertyTableName
    97:97:java.lang.String getAttachmentPropertyPrimaryColumnName() -> getAttachmentPropertyPrimaryColumnName
    103:104:void setAttachmentPropertyPrimaryColumnName(java.lang.String) -> setAttachmentPropertyPrimaryColumnName
    108:108:java.util.Map getAttachmentProperties(long) -> getAttachmentProperties
    112:113:void deleteAttachmentProperties(long) -> deleteAttachmentProperties
    116:117:void setAttachmentProperties(long,java.util.Map) -> setAttachmentProperties
    120:120:java.util.List getAllAttachmentIds() -> getAllAttachmentIds
    130:133:void deleteAttachmentData() -> deleteAttachmentData
    136:154:architecture.ee.web.attachment.Attachment createAttachment(architecture.ee.web.attachment.Attachment) -> createAttachment
    159:169:void updateAttachment(architecture.ee.web.attachment.Attachment) -> updateAttachment
    172:177:void deleteAttachment(architecture.ee.web.attachment.Attachment) -> deleteAttachment
    180:184:void deleteAttachmentData(architecture.ee.web.attachment.Attachment) -> deleteAttachmentData
    187:187:java.io.InputStream getAttachmentData(architecture.ee.web.attachment.Attachment) -> getAttachmentData
    192:211:void saveAttachmentData(architecture.ee.web.attachment.Attachment,java.io.InputStream) -> saveAttachmentData
    214:216:architecture.ee.web.attachment.Attachment getByAttachmentId(long) -> getByAttachmentId
    220:220:java.util.List getByObjectTypeAndObjectId(int,long) -> getByObjectTypeAndObjectId
    228:228:int getAttachmentCount(int,long) -> getAttachmentCount
    236:236:long getAttachmentUsage(int,long) -> getAttachmentUsage
architecture.ee.web.attachment.dao.impl.JdbcAttachmentDao$1 -> architecture.ee.web.attachment.dao.impl.JdbcAttachmentDao$1:
    28:28:void <init>() -> <init>
    28:28:java.lang.Object mapRow(java.sql.ResultSet,int) -> mapRow
    1030:1040:architecture.ee.web.attachment.Attachment mapRow$189c6826(java.sql.ResultSet):30:40 -> mapRow
    1030:1040:java.lang.Object mapRow(java.sql.ResultSet,int):28 -> mapRow
architecture.ee.web.attachment.dao.impl.JdbcAttachmentDao$2 -> architecture.ee.web.attachment.dao.impl.JdbcAttachmentDao$2:
    java.util.List val$itemsToUse -> a
    47:47:void <init>(java.util.List) -> <init>
    49:55:void setValues(java.sql.PreparedStatement,int) -> setValues
    57:57:int getBatchSize() -> getBatchSize
architecture.ee.web.attachment.dao.impl.JdbcAttachmentDao$3 -> architecture.ee.web.attachment.dao.impl.JdbcAttachmentDao$3:
    122:122:void <init>() -> <init>
    122:122:java.lang.Object mapRow(java.sql.ResultSet,int) -> mapRow
    1124:1124:java.lang.Long mapRow$4abb7c41(java.sql.ResultSet):124:124 -> mapRow
    1124:1124:java.lang.Object mapRow(java.sql.ResultSet,int):122 -> mapRow
architecture.ee.web.attachment.dao.impl.JdbcImageDao -> architecture.ee.web.attachment.dao.impl.JdbcImageDao:
    java.lang.String sequencerName -> a
    architecture.ee.jdbc.property.dao.ExtendedPropertyDao extendedPropertyDao -> a
    java.lang.String imagementPropertyTableName -> b
    java.lang.String imagePropertyPrimaryColumnName -> c
    org.springframework.jdbc.core.RowMapper imageMapper -> a
    38:117:void <init>() -> <init>
    47:47:java.util.Map getImageProperties(long) -> getImageProperties
    51:52:void deleteImageProperties(long) -> deleteImageProperties
    55:56:void setImageProperties(long,java.util.Map) -> setImageProperties
    60:60:java.lang.String getSequencerName() -> getSequencerName
    68:68:architecture.ee.jdbc.property.dao.ExtendedPropertyDao getExtendedPropertyDao() -> getExtendedPropertyDao
    76:77:void setExtendedPropertyDao(architecture.ee.jdbc.property.dao.ExtendedPropertyDao) -> setExtendedPropertyDao
    84:84:java.lang.String getImagementPropertyTableName() -> getImagementPropertyTableName
    92:93:void setImagementPropertyTableName(java.lang.String) -> setImagementPropertyTableName
    100:100:java.lang.String getImagePropertyPrimaryColumnName() -> getImagePropertyPrimaryColumnName
    109:110:void setImagePropertyPrimaryColumnName(java.lang.String) -> setImagePropertyPrimaryColumnName
    114:115:void setSequencerName(java.lang.String) -> setSequencerName
    135:157:architecture.ee.web.attachment.Image createImage(architecture.ee.web.attachment.Image) -> createImage
    161:174:architecture.ee.web.attachment.Image updateImage(architecture.ee.web.attachment.Image) -> updateImage
    178:184:void deleteImage(architecture.ee.web.attachment.Image) -> deleteImage
    187:187:java.io.InputStream getImageInputStream(architecture.ee.web.attachment.Image) -> getImageInputStream
    191:211:void saveImageInputStream(architecture.ee.web.attachment.Image,java.io.InputStream) -> saveImageInputStream
    214:216:architecture.ee.web.attachment.Image getImageById(long) -> getImageById
    221:221:java.util.List getImageIds(int,long) -> getImageIds
    226:226:java.util.List getImageIds(int,long,int,int) -> getImageIds
    236:236:int getImageCount(int,long) -> getImageCount
    243:243:long getImageUsage(int,long) -> getImageUsage
architecture.ee.web.attachment.dao.impl.JdbcImageDao$1 -> architecture.ee.web.attachment.dao.impl.JdbcImageDao$1:
    117:117:void <init>() -> <init>
    117:117:java.lang.Object mapRow(java.sql.ResultSet,int) -> mapRow
    1119:1129:architecture.ee.web.attachment.Image mapRow$708dcf2e(java.sql.ResultSet):119:129 -> mapRow
    1119:1129:java.lang.Object mapRow(java.sql.ResultSet,int):117 -> mapRow
architecture.ee.web.attachment.dao.impl.JdbcImageLinkDao -> architecture.ee.web.attachment.dao.impl.JdbcImageLinkDao:
    org.springframework.jdbc.core.RowMapper imageLinkMapper -> a
    30:32:void <init>() -> <init>
    44:48:architecture.ee.web.attachment.ImageLink getImageLinkByImageId(java.lang.Long) -> getImageLinkByImageId
    52:56:architecture.ee.web.attachment.ImageLink getImageLink(java.lang.String) -> getImageLink
    60:64:void saveImageLink(architecture.ee.web.attachment.ImageLink) -> saveImageLink
    67:70:void removeImageLink(architecture.ee.web.attachment.ImageLink) -> removeImageLink
    73:77:void removeImageLink(architecture.ee.web.attachment.Image) -> removeImageLink
architecture.ee.web.attachment.dao.impl.JdbcImageLinkDao$1 -> architecture.ee.web.attachment.dao.impl.JdbcImageLinkDao$1:
    32:32:void <init>() -> <init>
    32:32:java.lang.Object mapRow(java.sql.ResultSet,int) -> mapRow
    1034:1039:architecture.ee.web.attachment.ImageLink mapRow$378a6c78(java.sql.ResultSet):34:39 -> mapRow
    1034:1039:java.lang.Object mapRow(java.sql.ResultSet,int):32 -> mapRow
architecture.ee.web.attachment.impl.AttachmentImpl -> architecture.ee.web.attachment.impl.AttachmentImpl:
    long attachmentId -> a
    java.lang.String name -> a
    java.lang.String contentType -> b
    int objectType -> a
    long objectId -> b
    int size -> b
    int downloadCount -> c
    java.io.InputStream inputStream -> a
    java.lang.Integer thumbnailSize -> a
    java.lang.String thumbnailContentType -> c
    architecture.common.user.User user -> a
    20:47:void <init>() -> <init>
    53:53:architecture.common.user.User getUser() -> getUser
    62:63:void setUser(architecture.common.user.User) -> setUser
    66:66:java.lang.String getName() -> getName
    70:71:void setName(java.lang.String) -> setName
    75:75:java.io.Serializable getPrimaryKeyObject() -> getPrimaryKeyObject
    79:79:long getAttachmentId() -> getAttachmentId
    83:84:void setAttachmentId(long) -> setAttachmentId
    87:87:int getObjectType() -> getObjectType
    91:92:void setObjectType(int) -> setObjectType
    95:95:long getObjectId() -> getObjectId
    99:100:void setObjectId(long) -> setObjectId
    103:103:int getSize() -> getSize
    107:108:void setSize(int) -> setSize
    111:111:java.lang.String getContentType() -> getContentType
    115:116:void setContentType(java.lang.String) -> setContentType
    119:119:int getDownloadCount() -> getDownloadCount
    123:124:void setDownloadCount(int) -> setDownloadCount
    128:128:int getCachedSize() -> getCachedSize
    134:134:int compareTo(architecture.ee.web.attachment.Attachment) -> compareTo
    139:139:int getModelObjectType() -> getModelObjectType
    143:144:void setInputStream(java.io.InputStream) -> setInputStream
    148:148:java.io.InputStream getInputStream() -> getInputStream
    153:160:java.lang.String toString() -> toString
    164:164:java.lang.Integer getThumbnailSize() -> getThumbnailSize
    168:169:void setThumbnailSize(java.lang.Integer) -> setThumbnailSize
    172:172:java.lang.String getThumbnailContentType() -> getThumbnailContentType
    176:177:void setThumbnailContentType(java.lang.String) -> setThumbnailContentType
architecture.ee.web.attachment.impl.ImageImpl -> architecture.ee.web.attachment.impl.ImageImpl:
    java.lang.String name -> a
    java.lang.Long imageId -> a
    java.lang.Integer size -> a
    java.lang.String contentType -> b
    java.lang.Integer objectType -> b
    java.lang.Long objectId -> b
    java.io.InputStream inputStream -> a
    java.lang.Integer thumbnailSize -> c
    java.lang.String thumbnailContentType -> c
    architecture.common.user.User user -> a
    42:53:void <init>() -> <init>
    59:59:architecture.common.user.User getUser() -> getUser
    68:69:void setUser(architecture.common.user.User) -> setUser
    73:73:java.io.Serializable getPrimaryKeyObject() -> getPrimaryKeyObject
    78:78:int getModelObjectType() -> getModelObjectType
    83:83:int getCachedSize() -> getCachedSize
    88:88:long getImageId() -> getImageId
    92:93:void setImageId(java.lang.Long) -> setImageId
    96:97:void setSize(int) -> setSize
    100:101:void setContentType(java.lang.String) -> setContentType
    104:104:java.lang.String getContentType() -> getContentType
    108:108:int getSize() -> getSize
    113:113:java.io.InputStream getInputStream() -> getInputStream
    117:117:int getObjectType() -> getObjectType
    121:122:void setObjectType(java.lang.Integer) -> setObjectType
    125:125:long getObjectId() -> getObjectId
    129:130:void setObjectId(java.lang.Long) -> setObjectId
    133:134:void setInputStream(java.io.InputStream) -> setInputStream
    137:137:java.lang.Integer getThumbnailSize() -> getThumbnailSize
    141:142:void setThumbnailSize(java.lang.Integer) -> setThumbnailSize
    145:145:java.lang.String getThumbnailContentType() -> getThumbnailContentType
    149:150:void setThumbnailContentType(java.lang.String) -> setThumbnailContentType
    156:156:java.lang.String getName() -> getName
    164:165:void setName(java.lang.String) -> setName
    169:176:java.lang.String toString() -> toString
architecture.ee.web.filter.CharacterEncodingFilter -> architecture.ee.web.filter.CharacterEncodingFilter:
    java.lang.String encoding -> a
    boolean forceEncoding -> a
    32:37:void <init>() -> <init>
    48:49:void setEncoding(java.lang.String) -> setEncoding
    63:64:void setForceEncoding(boolean) -> setForceEncoding
    72:87:void doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain) -> doFilterInternal
architecture.ee.web.filter.EncodingFilter -> architecture.ee.web.filter.EncodingFilter:
    12:12:void <init>() -> <init>
    19:19:void doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain) -> doFilterInternal
architecture.ee.web.logo.DefaultLogoImage -> architecture.ee.web.logo.DefaultLogoImage:
    int objectType -> a
    java.lang.Long objectId -> a
    java.lang.Long logoId -> b
    java.lang.Long userId -> c
    boolean primary -> a
    java.lang.String imageContentType -> a
    java.lang.Integer imageSize -> a
    java.lang.String thumbnailContentType -> b
    java.lang.Integer thumbnailSize -> b
    java.util.Date creationDate -> a
    java.util.Date modifiedDate -> b
    java.lang.String filename -> c
    56:68:void <init>() -> <init>
    75:76:void setLogoId(java.lang.Long) -> setLogoId
    82:82:int getObjectType() -> getObjectType
    90:91:void setObjectType(int) -> setObjectType
    97:97:java.lang.Long getObjectId() -> getObjectId
    105:106:void setObjectId(java.lang.Long) -> setObjectId
    112:112:java.lang.Long getUserId() -> getUserId
    120:121:void setUserId(java.lang.Long) -> setUserId
    128:129:void setPrimary(boolean) -> setPrimary
    132:132:java.lang.Boolean isPrimary() -> isPrimary
    139:139:java.lang.String getImageContentType() -> getImageContentType
    147:148:void setImageContentType(java.lang.String) -> setImageContentType
    154:154:java.lang.Integer getImageSize() -> getImageSize
    162:163:void setImageSize(java.lang.Integer) -> setImageSize
    169:169:java.lang.String getThumbnailContentType() -> getThumbnailContentType
    177:178:void setThumbnailContentType(java.lang.String) -> setThumbnailContentType
    184:184:java.lang.Integer getThumbnailSize() -> getThumbnailSize
    192:193:void setThumbnailSize(java.lang.Integer) -> setThumbnailSize
    200:200:java.util.Date getCreationDate() -> getCreationDate
    209:210:void setCreationDate(java.util.Date) -> setCreationDate
    217:217:java.util.Date getModifiedDate() -> getModifiedDate
    226:227:void setModifiedDate(java.util.Date) -> setModifiedDate
    233:233:java.lang.String getFilename() -> getFilename
    241:242:void setFilename(java.lang.String) -> setFilename
    248:248:java.lang.Long getLogoId() -> getLogoId
    253:253:int getCachedSize() -> getCachedSize
    261:288:java.lang.String toString() -> toString
architecture.ee.web.logo.DefaultLogoManager -> architecture.ee.web.logo.DefaultLogoManager:
    architecture.ee.web.logo.dao.LogoImageDao logoImageDao -> a
    java.util.concurrent.locks.Lock lock -> a
    org.apache.commons.logging.Log log -> a
    net.sf.ehcache.Cache logoImageIdsCache -> a
    net.sf.ehcache.Cache logoImageCache -> b
    java.io.File imageDir -> a
    52:63:void <init>() -> <init>
    70:71:void setLogoImageIdsCache(net.sf.ehcache.Cache) -> setLogoImageIdsCache
    78:79:void setLogoImageCache(net.sf.ehcache.Cache) -> setLogoImageCache
    86:87:void setLogoImageDao(architecture.ee.web.logo.dao.LogoImageDao) -> setLogoImageDao
    91:101:void addLogoImage(architecture.ee.web.logo.LogoImage,java.io.File) -> addLogoImage
    105:105:architecture.ee.web.logo.LogoImage createLogoImage() -> createLogoImage
    110:111:void addLogoImage(architecture.ee.web.logo.LogoImage,java.io.InputStream) -> addLogoImage
    115:126:void updateLogoImage(architecture.ee.web.logo.LogoImage,java.io.File) -> updateLogoImage
    130:141:void removeLogoImage(architecture.ee.web.logo.LogoImage) -> removeLogoImage
    144:156:void deleteImageFileCache(architecture.ee.web.logo.LogoImage) -> a
    159:168:architecture.ee.web.logo.LogoImage getLogoImageById(java.lang.Long) -> getLogoImageById
    172:177:architecture.ee.web.logo.LogoImage getPrimaryLogoImage(int,long) -> getPrimaryLogoImage
    181:189:java.util.List getLogoImages(int,long) -> getLogoImages
    193:197:int getLogoImageCount(int,long) -> getLogoImageCount
    202:205:java.io.InputStream getImageInputStream(architecture.ee.web.logo.LogoImage) -> getImageInputStream
    211:215:java.io.InputStream getImageThumbnailInputStream(architecture.ee.web.logo.LogoImage,int,int) -> getImageThumbnailInputStream
    221:221:architecture.ee.web.logo.LogoImage getPrimaryLogoImage(architecture.common.user.Company) -> getPrimaryLogoImage
    225:225:architecture.ee.web.logo.LogoImage getPrimaryLogoImage(architecture.ee.web.site.WebSite) -> getPrimaryLogoImage
    229:229:java.util.List getLogoImages(architecture.common.user.Company) -> getLogoImages
    233:233:int getLogoImageCount(architecture.common.user.Company) -> getLogoImageCount
    237:237:java.util.List getLogoImages(architecture.ee.web.site.WebSite) -> getLogoImages
    241:241:int getLogoImageCount(architecture.ee.web.site.WebSite) -> getLogoImageCount
    245:247:void initialize() -> initialize
    250:268:java.io.File getImageDir() -> getImageDir
    272:276:java.io.File getImageCacheDir() -> getImageCacheDir
    280:284:java.io.File getImageTempDir() -> getImageTempDir
    288:296:java.util.List getLogoImageIdList(int,long) -> getLogoImageIdList
    300:300:java.lang.String getLogoImageIdListCacheKey(int,long) -> getLogoImageIdListCacheKey
    305:307:java.lang.String toThumbnailFilename(architecture.ee.web.logo.LogoImage,int,int) -> toThumbnailFilename
    312:351:java.io.File getThumbnailFromCacheIfExist(architecture.ee.web.logo.LogoImage,int,int) -> getThumbnailFromCacheIfExist
    357:359:java.io.File getTemeFile() -> getTemeFile
    369:384:java.io.File getImageFromCacheIfExist(architecture.ee.web.logo.LogoImage) -> getImageFromCacheIfExist
architecture.ee.web.logo.LogoImage -> architecture.ee.web.logo.LogoImage:
    java.lang.String DEFAULT_THUMBNAIL_CONTENT_TYPE -> DEFAULT_THUMBNAIL_CONTENT_TYPE
    int getObjectType() -> getObjectType
    java.lang.Long getObjectId() -> getObjectId
    void setObjectType(int) -> setObjectType
    void setObjectId(java.lang.Long) -> setObjectId
    java.lang.Long getLogoId() -> getLogoId
    void setLogoId(java.lang.Long) -> setLogoId
    java.lang.Long getUserId() -> getUserId
    java.lang.Boolean isPrimary() -> isPrimary
    java.lang.String getFilename() -> getFilename
    void setFilename(java.lang.String) -> setFilename
    void setPrimary(boolean) -> setPrimary
    java.lang.String getImageContentType() -> getImageContentType
    void setImageContentType(java.lang.String) -> setImageContentType
    java.lang.Integer getImageSize() -> getImageSize
    void setImageSize(java.lang.Integer) -> setImageSize
    java.lang.String getThumbnailContentType() -> getThumbnailContentType
    java.lang.Integer getThumbnailSize() -> getThumbnailSize
    void setThumbnailContentType(java.lang.String) -> setThumbnailContentType
    void setThumbnailSize(java.lang.Integer) -> setThumbnailSize
    java.util.Date getCreationDate() -> getCreationDate
    void setCreationDate(java.util.Date) -> setCreationDate
    java.util.Date getModifiedDate() -> getModifiedDate
    void setModifiedDate(java.util.Date) -> setModifiedDate
architecture.ee.web.logo.LogoImageNotFoundException -> architecture.ee.web.logo.LogoImageNotFoundException:
    22:23:void <init>() -> <init>
    26:27:void <init>(int,java.lang.String,java.lang.Throwable) -> <init>
    30:31:void <init>(int,java.lang.String) -> <init>
    34:35:void <init>(int,java.lang.Throwable) -> <init>
    38:39:void <init>(int) -> <init>
    42:43:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    46:47:void <init>(java.lang.String) -> <init>
    50:51:void <init>(java.lang.Throwable) -> <init>
architecture.ee.web.logo.LogoManager -> architecture.ee.web.logo.LogoManager:
    architecture.ee.web.logo.LogoImage createLogoImage() -> createLogoImage
    void addLogoImage(architecture.ee.web.logo.LogoImage,java.io.File) -> addLogoImage
    void addLogoImage(architecture.ee.web.logo.LogoImage,java.io.InputStream) -> addLogoImage
    void removeLogoImage(architecture.ee.web.logo.LogoImage) -> removeLogoImage
    void updateLogoImage(architecture.ee.web.logo.LogoImage,java.io.File) -> updateLogoImage
    architecture.ee.web.logo.LogoImage getLogoImageById(java.lang.Long) -> getLogoImageById
    architecture.ee.web.logo.LogoImage getPrimaryLogoImage(int,long) -> getPrimaryLogoImage
    java.util.List getLogoImages(int,long) -> getLogoImages
    int getLogoImageCount(int,long) -> getLogoImageCount
    java.io.InputStream getImageInputStream(architecture.ee.web.logo.LogoImage) -> getImageInputStream
    java.io.InputStream getImageThumbnailInputStream(architecture.ee.web.logo.LogoImage,int,int) -> getImageThumbnailInputStream
    architecture.ee.web.logo.LogoImage getPrimaryLogoImage(architecture.common.user.Company) -> getPrimaryLogoImage
    architecture.ee.web.logo.LogoImage getPrimaryLogoImage(architecture.ee.web.site.WebSite) -> getPrimaryLogoImage
    java.util.List getLogoImages(architecture.common.user.Company) -> getLogoImages
    int getLogoImageCount(architecture.common.user.Company) -> getLogoImageCount
    java.util.List getLogoImages(architecture.ee.web.site.WebSite) -> getLogoImages
    int getLogoImageCount(architecture.ee.web.site.WebSite) -> getLogoImageCount
architecture.ee.web.logo.dao.LogoImageDao -> architecture.ee.web.logo.dao.LogoImageDao:
    void addLogoImage(architecture.ee.web.logo.LogoImage,java.io.File) -> addLogoImage
    void addLogoImage(architecture.ee.web.logo.LogoImage,java.io.InputStream) -> addLogoImage
    void updateLogoImage(architecture.ee.web.logo.LogoImage,java.io.File) -> updateLogoImage
    void updateLogoImage(architecture.ee.web.logo.LogoImage,java.io.InputStream) -> updateLogoImage
    void removeLogoImage(architecture.ee.web.logo.LogoImage) -> removeLogoImage
    java.io.InputStream getInputStream(architecture.ee.web.logo.LogoImage) -> getInputStream
    java.lang.Long getPrimaryLogoImageId(int,long) -> getPrimaryLogoImageId
    architecture.ee.web.logo.LogoImage getLogoImageById(long) -> getLogoImageById
    java.util.List getLogoImageIds(int,long) -> getLogoImageIds
    int getLogoImageCount(int,long) -> getLogoImageCount
architecture.ee.web.logo.dao.jdbc.JdbcLogoImageDao -> architecture.ee.web.logo.dao.jdbc.JdbcLogoImageDao:
    org.springframework.jdbc.core.RowMapper logoMapper -> a
    java.lang.String sequencerName -> a
    42:62:void <init>() -> <init>
    68:68:java.lang.String getSequencerName() -> getSequencerName
    76:77:void setSequencerName(java.lang.String) -> setSequencerName
    80:80:java.lang.Long nextId() -> nextId
    85:90:void addLogoImage(architecture.ee.web.logo.LogoImage,java.io.File) -> addLogoImage
    93:116:void addLogoImage(architecture.ee.web.logo.LogoImage,java.io.InputStream) -> addLogoImage
    121:126:void updateLogoImage(architecture.ee.web.logo.LogoImage,java.io.File) -> updateLogoImage
    130:148:void updateLogoImage(architecture.ee.web.logo.LogoImage,java.io.InputStream) -> updateLogoImage
    151:166:void updateImageImputStream(architecture.ee.web.logo.LogoImage,java.io.InputStream) -> updateImageImputStream
    169:173:void removeLogoImage(architecture.ee.web.logo.LogoImage) -> removeLogoImage
    176:176:java.io.InputStream getInputStream(architecture.ee.web.logo.LogoImage) -> getInputStream
    183:188:java.lang.Long getPrimaryLogoImageId(int,long) -> getPrimaryLogoImageId
    194:199:architecture.ee.web.logo.LogoImage getLogoImageById(long) -> getLogoImageById
    204:204:java.util.List getLogoImageIds(int,long) -> getLogoImageIds
    211:211:int getLogoImageCount(int,long) -> getLogoImageCount
architecture.ee.web.logo.dao.jdbc.JdbcLogoImageDao$1 -> architecture.ee.web.logo.dao.jdbc.JdbcLogoImageDao$1:
    42:42:void <init>() -> <init>
    42:42:java.lang.Object mapRow(java.sql.ResultSet,int) -> mapRow
    1044:1054:architecture.ee.web.logo.LogoImage mapRow$6e18c855(java.sql.ResultSet):44:54 -> mapRow
    1044:1054:java.lang.Object mapRow(java.sql.ResultSet,int):42 -> mapRow
architecture.ee.web.model.DataSourceRequest -> architecture.ee.web.model.DataSourceRequest:
    int objectType -> a
    long objectId -> a
    int page -> b
    int pageSize -> c
    int take -> d
    int skip -> e
    java.util.List sort -> a
    java.util.List group -> b
    java.util.List aggregate -> c
    java.util.HashMap data -> a
    architecture.ee.web.model.DataSourceRequest$FilterDescriptor filter -> a
    38:47:void <init>() -> <init>
    50:50:java.util.HashMap getData() -> getData
    55:56:void handleUnknown(java.lang.String,java.lang.Object) -> handleUnknown
    59:59:int getObjectType() -> getObjectType
    63:64:void setObjectType(int) -> setObjectType
    67:67:long getObjectId() -> getObjectId
    71:72:void setObjectId(long) -> setObjectId
    75:75:int getPage() -> getPage
    79:80:void setPage(int) -> setPage
    83:83:int getPageSize() -> getPageSize
    87:88:void setPageSize(int) -> setPageSize
    91:91:int getTake() -> getTake
    95:96:void setTake(int) -> setTake
    99:99:int getSkip() -> getSkip
    103:104:void setSkip(int) -> setSkip
    107:107:java.util.List getSort() -> getSort
    111:112:void setSort(java.util.List) -> setSort
    115:115:architecture.ee.web.model.DataSourceRequest$FilterDescriptor getFilter() -> getFilter
    119:120:void setFilter(architecture.ee.web.model.DataSourceRequest$FilterDescriptor) -> setFilter
    469:469:java.util.List getGroup() -> getGroup
    473:474:void setGroup(java.util.List) -> setGroup
    477:477:java.util.List getAggregate() -> getAggregate
    481:482:void setAggregate(java.util.List) -> setAggregate
    489:489:java.lang.String toString() -> toString
architecture.ee.web.model.DataSourceRequest$AggregateDescriptor -> architecture.ee.web.model.DataSourceRequest$AggregateDescriptor:
    java.lang.String field -> a
    java.lang.String aggregate -> b
    542:542:void <init>() -> <init>
    547:547:java.lang.String getField() -> getField
    550:551:void setField(java.lang.String) -> setField
    554:554:java.lang.String getAggregate() -> getAggregate
    558:559:void setAggregate(java.lang.String) -> setAggregate
    562:562:java.lang.String toString() -> toString
architecture.ee.web.model.DataSourceRequest$FilterDescriptor -> architecture.ee.web.model.DataSourceRequest$FilterDescriptor:
    java.lang.String logic -> a
    java.util.List filters -> a
    java.lang.String field -> b
    java.lang.Object value -> a
    java.lang.String operator -> c
    boolean ignoreCase -> a
    573:577:void <init>() -> <init>
    580:580:java.lang.String getField() -> getField
    583:584:void setField(java.lang.String) -> setField
    586:586:java.lang.Object getValue() -> getValue
    589:590:void setValue(java.lang.Object) -> setValue
    592:592:java.lang.String getOperator() -> getOperator
    595:596:void setOperator(java.lang.String) -> setOperator
    599:599:java.lang.String getLogic() -> getLogic
    603:604:void setLogic(java.lang.String) -> setLogic
    607:607:boolean isIgnoreCase() -> isIgnoreCase
    611:612:void setIgnoreCase(boolean) -> setIgnoreCase
    615:615:java.util.List getFilters() -> getFilters
    620:620:java.lang.String toString() -> toString
architecture.ee.web.model.DataSourceRequest$GroupDescriptor -> architecture.ee.web.model.DataSourceRequest$GroupDescriptor:
    java.util.List aggregates -> a
    527:529:void <init>() -> <init>
    532:532:java.util.List getAggregates() -> getAggregates
    537:537:java.lang.String toString() -> toString
architecture.ee.web.model.DataSourceRequest$SortDescriptor -> architecture.ee.web.model.DataSourceRequest$SortDescriptor:
    java.lang.String field -> a
    java.lang.String dir -> b
    497:497:void <init>() -> <init>
    502:502:java.lang.String getField() -> getField
    506:507:void setField(java.lang.String) -> setField
    510:510:java.lang.String getDir() -> getDir
    514:515:void setDir(java.lang.String) -> setDir
    519:519:java.lang.String toString() -> toString
architecture.ee.web.model.ItemList -> architecture.ee.web.model.ItemList:
    java.util.List items -> a
    int totalCount -> a
    32:35:void <init>(java.util.List,int) -> <init>
    41:41:java.util.List getItems() -> getItems
    49:50:void setItems(java.util.List) -> setItems
    56:56:int getTotalCount() -> getTotalCount
    64:65:void setTotalCount(int) -> setTotalCount
architecture.ee.web.model.json.MenuDeserializer -> architecture.ee.web.model.json.MenuDeserializer:
    32:33:void <init>() -> <init>
    38:47:architecture.ee.web.navigator.Menu deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    30:30:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
architecture.ee.web.monitoring.moskito.AccumulatedSingleGraphObject -> architecture.ee.web.monitoring.moskito.AccumulatedSingleGraphObject:
    java.lang.String name -> a
    java.util.List data -> a
    26:29:void <init>(java.lang.String) -> <init>
    32:33:void add(architecture.ee.web.monitoring.moskito.AccumulatedValueObject) -> add
    38:38:java.lang.String getName() -> getName
    45:46:void setName(java.lang.String) -> setName
    52:52:java.util.List getData() -> getData
    59:60:void setData(java.util.List) -> setData
architecture.ee.web.monitoring.moskito.AccumulatedValueObject -> architecture.ee.web.monitoring.moskito.AccumulatedValueObject:
    java.util.List values -> a
    java.lang.String name -> a
    java.util.Date date -> a
    34:37:void <init>(java.util.Date) -> <init>
    43:43:java.util.List getValues() -> getValues
    50:50:java.lang.String getName() -> getName
    57:58:void setName(java.lang.String) -> setName
    64:65:void setValues(java.util.List) -> setValues
    68:69:void addValue(java.lang.String) -> addValue
    75:75:java.util.Date getDate() -> getDate
    82:83:void setDate(java.util.Date) -> setDate
    89:89:java.lang.String getFirstValue() -> getFirstValue
architecture.ee.web.monitoring.moskito.AccumulatorDefinitionObject -> architecture.ee.web.monitoring.moskito.AccumulatorDefinitionObject:
    java.lang.String id -> a
    java.lang.String name -> b
    java.lang.String path -> c
    int numberOfValues -> a
    java.util.Date lastValueDate -> a
    32:32:java.lang.String getId() -> getId
    38:39:void setId(java.lang.String) -> setId
    44:44:java.lang.String getPath() -> getPath
    50:51:void setPath(java.lang.String) -> setPath
    58:60:void <init>() -> <init>
    65:65:java.lang.String getName() -> getName
    71:72:void setName(java.lang.String) -> setName
    77:77:int getNumberOfValues() -> getNumberOfValues
    83:84:void setNumberOfValues(int) -> setNumberOfValues
    90:90:java.util.Date getLastValueDate() -> getLastValueDate
    96:97:void setLastValueDate(java.util.Date) -> setLastValueDate
architecture.ee.web.monitoring.moskito.AccumulatorObject -> architecture.ee.web.monitoring.moskito.AccumulatorObject:
    java.lang.String name -> a
    java.util.List values -> a
    31:39:void <init>(net.anotheria.moskito.core.accumulation.Accumulator) -> <init>
    45:45:java.lang.String getName() -> getName
    52:53:void setName(java.lang.String) -> setName
    59:59:java.util.List getValues() -> getValues
    66:67:void setValues(java.util.List) -> setValues
architecture.ee.web.monitoring.moskito.DateValue -> architecture.ee.web.monitoring.moskito.DateValue:
    java.util.Date dateValue -> a
    34:36:void <init>(java.lang.String,java.util.Date) -> <init>
    41:41:java.util.Date getValue() -> getValue
    46:46:java.lang.String getType() -> getType
    24:24:java.lang.Object getValue() -> getValue
architecture.ee.web.monitoring.moskito.DoubleValue -> architecture.ee.web.monitoring.moskito.DoubleValue:
    double doubleValue -> a
    28:30:void <init>(java.lang.String,double) -> <init>
    34:34:java.lang.Object getValue() -> getValue
    39:39:java.lang.String getType() -> getType
architecture.ee.web.monitoring.moskito.LibraryObject -> architecture.ee.web.monitoring.moskito.LibraryObject:
    java.lang.String name -> a
    net.anotheria.util.maven.MavenVersion mavenVersion -> a
    java.util.Date lastModified -> a
    27:27:void <init>() -> <init>
    45:45:java.util.Date getLastModified() -> getLastModified
    49:50:void setLastModified(java.util.Date) -> setLastModified
    53:53:java.lang.String getName() -> getName
    57:58:void setName(java.lang.String) -> setName
    61:61:net.anotheria.util.maven.MavenVersion getMavenVersion() -> getMavenVersion
    65:66:void setMavenVersion(net.anotheria.util.maven.MavenVersion) -> setMavenVersion
    69:69:java.lang.String getTimestamp() -> getTimestamp
    73:73:java.lang.String getGroup() -> getGroup
    77:77:java.lang.String getArtifact() -> getArtifact
    81:81:java.lang.String getVersion() -> getVersion
    86:86:java.lang.String toString() -> toString
architecture.ee.web.monitoring.moskito.LongValue -> architecture.ee.web.monitoring.moskito.LongValue:
    long longValue -> a
    27:29:void <init>(java.lang.String,long) -> <init>
    32:32:java.lang.String getType() -> getType
    37:37:java.lang.Long getValue() -> getValue
    18:18:java.lang.Object getValue() -> getValue
architecture.ee.web.monitoring.moskito.ProducerObject -> architecture.ee.web.monitoring.moskito.ProducerObject:
    java.lang.String producerId -> a
    java.lang.String category -> b
    java.lang.String subsystem -> c
    java.lang.String producerClassName -> d
    java.lang.String fullProducerClassName -> e
    java.util.List firstStatsValues -> a
    java.util.List lines -> b
    53:56:void <init>() -> <init>
    62:62:java.lang.String getProducerId() -> getProducerId
    69:70:void setProducerId(java.lang.String) -> setProducerId
    76:76:java.lang.String getCategory() -> getCategory
    83:84:void setCategory(java.lang.String) -> setCategory
    90:90:java.lang.String getSubsystem() -> getSubsystem
    97:98:void setSubsystem(java.lang.String) -> setSubsystem
    104:104:java.lang.String getProducerClassName() -> getProducerClassName
    111:112:void setProducerClassName(java.lang.String) -> setProducerClassName
    118:118:java.lang.String getFullProducerClassName() -> getFullProducerClassName
    125:126:void setFullProducerClassName(java.lang.String) -> setFullProducerClassName
    132:132:java.util.List getFirstStatsValues() -> getFirstStatsValues
    139:140:void setFirstStatsValues(java.util.List) -> setFirstStatsValues
    146:146:java.util.List getLines() -> getLines
    150:151:void addStatLine(architecture.ee.web.monitoring.moskito.StatLineObject) -> addStatLine
architecture.ee.web.monitoring.moskito.StatLineObject -> architecture.ee.web.monitoring.moskito.StatLineObject:
    java.lang.String statName -> a
    java.util.List values -> a
    20:20:void <init>() -> <init>
    27:27:java.lang.String getStatName() -> getStatName
    31:32:void setStatName(java.lang.String) -> setStatName
    35:35:java.util.List getValues() -> getValues
    39:40:void setValues(java.util.List) -> setValues
architecture.ee.web.monitoring.moskito.StatValue -> architecture.ee.web.monitoring.moskito.StatValue:
    java.lang.String name -> a
    27:29:void <init>(java.lang.String) -> <init>
    35:35:java.lang.String getName() -> getName
    43:44:void setName(java.lang.String) -> setName
    java.lang.Object getValue() -> getValue
    java.lang.String getType() -> getType
architecture.ee.web.monitoring.moskito.StringValue -> architecture.ee.web.monitoring.moskito.StringValue:
    java.lang.String value -> a
    29:31:void <init>(java.lang.String,java.lang.String) -> <init>
    34:34:java.lang.String getType() -> getType
    38:38:java.lang.String getValue() -> getValue
    18:18:java.lang.Object getValue() -> getValue
architecture.ee.web.monitoring.moskito.ThresholdAlertObject -> architecture.ee.web.monitoring.moskito.ThresholdAlertObject:
    java.lang.String id -> a
    java.lang.String name -> b
    java.lang.String oldStatus -> c
    java.lang.String oldColorCode -> d
    java.lang.String oldValue -> e
    java.lang.String newStatus -> f
    java.lang.String newColorCode -> g
    java.lang.String newValue -> h
    java.util.Date updatedDate -> a
    40:42:void <init>() -> <init>
    48:48:java.lang.String getId() -> getId
    55:56:void setId(java.lang.String) -> setId
    62:62:java.lang.String getName() -> getName
    69:70:void setName(java.lang.String) -> setName
    76:76:java.lang.String getOldStatus() -> getOldStatus
    83:84:void setOldStatus(java.lang.String) -> setOldStatus
    90:90:java.lang.String getOldColorCode() -> getOldColorCode
    97:98:void setOldColorCode(java.lang.String) -> setOldColorCode
    104:104:java.lang.String getOldValue() -> getOldValue
    111:112:void setOldValue(java.lang.String) -> setOldValue
    118:118:java.lang.String getNewStatus() -> getNewStatus
    125:126:void setNewStatus(java.lang.String) -> setNewStatus
    132:132:java.lang.String getNewColorCode() -> getNewColorCode
    139:140:void setNewColorCode(java.lang.String) -> setNewColorCode
    146:146:java.lang.String getNewValue() -> getNewValue
    153:154:void setNewValue(java.lang.String) -> setNewValue
    160:160:java.util.Date getUpdatedDate() -> getUpdatedDate
    167:168:void setUpdatedDate(java.util.Date) -> setUpdatedDate
architecture.ee.web.monitoring.moskito.ThresholdDefinitionObject -> architecture.ee.web.monitoring.moskito.ThresholdDefinitionObject:
    java.lang.String id -> a
    java.lang.String name -> b
    java.lang.String producerName -> c
    java.lang.String statName -> d
    java.lang.String valueName -> e
    java.lang.String intervalName -> f
    java.lang.String descriptionString -> g
    java.util.List guards -> a
    net.anotheria.moskito.core.stats.TimeUnit timeUnit -> a
    44:46:void <init>() -> <init>
    49:50:void addGuard(net.anotheria.moskito.core.threshold.ThresholdConditionGuard) -> addGuard
    56:56:java.lang.String getId() -> getId
    63:64:void setId(java.lang.String) -> setId
    70:70:java.lang.String getName() -> getName
    77:78:void setName(java.lang.String) -> setName
    84:84:java.lang.String getProducerName() -> getProducerName
    91:92:void setProducerName(java.lang.String) -> setProducerName
    98:98:java.lang.String getStatName() -> getStatName
    105:106:void setStatName(java.lang.String) -> setStatName
    112:112:java.lang.String getValueName() -> getValueName
    119:120:void setValueName(java.lang.String) -> setValueName
    126:126:java.lang.String getIntervalName() -> getIntervalName
    133:134:void setIntervalName(java.lang.String) -> setIntervalName
    140:140:java.lang.String getDescriptionString() -> getDescriptionString
    147:148:void setDescriptionString(java.lang.String) -> setDescriptionString
    154:154:java.util.List getGuards() -> getGuards
    161:162:void setGuards(java.util.List) -> setGuards
    168:168:net.anotheria.moskito.core.stats.TimeUnit getTimeUnit() -> getTimeUnit
    175:176:void setTimeUnit(net.anotheria.moskito.core.stats.TimeUnit) -> setTimeUnit
    180:180:java.lang.String toString() -> toString
architecture.ee.web.monitoring.moskito.ThresholdStatusObject -> architecture.ee.web.monitoring.moskito.ThresholdStatusObject:
    java.lang.String name -> a
    java.lang.String status -> b
    java.lang.String colorCode -> c
    java.lang.String timestamp -> d
    java.lang.String description -> e
    java.lang.String value -> f
    java.lang.String previousColorCode -> g
    java.lang.String previousStatus -> h
    net.anotheria.moskito.core.threshold.ThresholdStatus statusForSorting -> a
    java.util.Date updatedDate -> a
    java.lang.String id -> i
    long flipCount -> a
    42:44:void <init>() -> <init>
    51:51:java.lang.String getName() -> getName
    59:60:void setName(java.lang.String) -> setName
    67:67:java.lang.String getStatus() -> getStatus
    75:76:void setStatus(java.lang.String) -> setStatus
    83:83:java.lang.String getColorCode() -> getColorCode
    91:92:void setColorCode(java.lang.String) -> setColorCode
    99:99:java.lang.String getTimestamp() -> getTimestamp
    107:108:void setTimestamp(java.lang.String) -> setTimestamp
    115:115:java.lang.String getDescription() -> getDescription
    123:124:void setDescription(java.lang.String) -> setDescription
    131:131:java.lang.String getValue() -> getValue
    139:140:void setValue(java.lang.String) -> setValue
    147:147:java.lang.String getPreviousColorCode() -> getPreviousColorCode
    155:156:void setPreviousColorCode(java.lang.String) -> setPreviousColorCode
    163:163:java.lang.String getPreviousStatus() -> getPreviousStatus
    171:172:void setPreviousStatus(java.lang.String) -> setPreviousStatus
    179:179:net.anotheria.moskito.core.threshold.ThresholdStatus getStatusForSorting() -> getStatusForSorting
    187:188:void setStatusForSorting(net.anotheria.moskito.core.threshold.ThresholdStatus) -> setStatusForSorting
    196:196:java.util.Date getUpdatedDate() -> getUpdatedDate
    204:205:void setUpdatedDate(java.util.Date) -> setUpdatedDate
    212:212:java.lang.String getId() -> getId
    220:221:void setId(java.lang.String) -> setId
    228:228:long getFlipCount() -> getFlipCount
    236:237:void setFlipCount(long) -> setFlipCount
    241:241:java.lang.String toString() -> toString
architecture.ee.web.monitoring.moskito.config.MoskitoConfig -> architecture.ee.web.monitoring.moskito.config.MoskitoConfig:
    23:24:void <init>() -> <init>
architecture.ee.web.navigator.AbstractMenuHolder -> architecture.ee.web.navigator.AbstractMenuHolder:
    java.lang.String breadCrumbDelimiter -> a
    org.apache.commons.logging.Log log -> log
    org.apache.commons.collections.map.LinkedMap menus -> menus
    28:31:void <init>() -> <init>
    35:35:java.util.Set getMenuNames() -> getMenuNames
    43:56:java.util.List getTopMenus() -> getTopMenus
    61:61:architecture.ee.web.navigator.MenuComponent getMenu(java.lang.String) -> getMenu
    70:82:void addMenu(architecture.ee.web.navigator.MenuComponent) -> addMenu
    88:89:void removeMenu(java.lang.String) -> removeMenu
    96:97:void removeAllMenus() -> removeAllMenus
    107:133:architecture.ee.web.navigator.MenuComponent getMenu(java.lang.String,java.lang.String) -> getMenu
    144:149:int getMenuDepth(java.lang.String) -> getMenuDepth
    158:169:int getMenuDepth() -> getMenuDepth
    177:182:architecture.ee.web.navigator.MenuComponent[] getTopMenusAsArray() -> getTopMenusAsArray
    190:195:java.util.List getTopMenusNames() -> getTopMenusNames
    199:200:void setBreadCrumbDelimiter(java.lang.String) -> setBreadCrumbDelimiter
    203:210:void buildBreadCrumbs() -> buildBreadCrumbs
    213:215:void buildBreadCrumbs(java.lang.String) -> buildBreadCrumbs
architecture.ee.web.navigator.AbstractMenuRepository -> architecture.ee.web.navigator.AbstractMenuRepository:
    org.apache.commons.logging.Log log -> log
    architecture.common.event.api.EventPublisher eventPublisher -> eventPublisher
    net.sf.ehcache.Cache menuCache -> menuCache
    net.sf.ehcache.Cache menuIdCache -> menuIdCache
    boolean caseInsensitiveGroupNameMatch -> caseInsensitiveGroupNameMatch
    org.apache.commons.collections.map.LinkedMap menus -> menus
    27:35:void <init>() -> <init>
    38:38:net.sf.ehcache.Cache getMenuCache() -> getMenuCache
    42:43:void setMenuCache(net.sf.ehcache.Cache) -> setMenuCache
    46:46:net.sf.ehcache.Cache getMenuIdCache() -> getMenuIdCache
    50:51:void setMenuIdCache(net.sf.ehcache.Cache) -> setMenuIdCache
    54:55:void setEventPublisher(architecture.common.event.api.EventPublisher) -> setEventPublisher
    60:68:architecture.ee.web.navigator.Menu getMenu(java.lang.String) -> getMenu
    73:78:architecture.ee.web.navigator.Menu getMenu(long) -> getMenu
    82:85:architecture.ee.web.navigator.Menu getMenuInCache(long) -> getMenuInCache
    90:90:java.lang.String caseMenuName(java.lang.String) -> caseMenuName
    architecture.ee.web.navigator.Menu getMenuByName(java.lang.String) -> getMenuByName
    architecture.ee.web.navigator.Menu getMenuById(long) -> getMenuById
    98:98:boolean nameEquals(architecture.ee.web.navigator.Menu,architecture.ee.web.navigator.Menu) -> nameEquals
    102:103:void menuNameUpdated(java.lang.String) -> menuNameUpdated
    106:107:void clearMenuFromCache(architecture.ee.web.navigator.Menu) -> clearMenuFromCache
architecture.ee.web.navigator.Component -> architecture.ee.web.navigator.Component:
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
architecture.ee.web.navigator.DefaultMenu -> architecture.ee.web.navigator.DefaultMenu:
    long menuId -> a
    java.lang.String location -> a
    java.lang.String title -> b
    boolean enabled -> a
    java.lang.String menuData -> c
    28:36:void <init>() -> <init>
    28:44:void <init>(long) -> <init>
    47:47:long getMenuId() -> getMenuId
    51:52:void setMenuId(long) -> setMenuId
    55:56:void setLocation(java.lang.String) -> setLocation
    60:60:java.io.Serializable getPrimaryKeyObject() -> getPrimaryKeyObject
    65:65:int getModelObjectType() -> getModelObjectType
    69:69:java.lang.String getLocation() -> getLocation
    73:74:void setLoaction(java.lang.String) -> setLoaction
    77:77:java.lang.String getTitle() -> getTitle
    81:82:void setTitle(java.lang.String) -> setTitle
    85:85:boolean isEnabled() -> isEnabled
    89:90:void setEnabled(boolean) -> setEnabled
    94:97:int hashCode() -> hashCode
    102:111:boolean equals(java.lang.Object) -> equals
    117:149:java.lang.String toString() -> toString
    154:154:int getCachedSize() -> getCachedSize
    166:166:java.lang.String getMenuData() -> getMenuData
    170:171:void setMenuData(java.lang.String) -> setMenuData
architecture.ee.web.navigator.DefaultMenuRepository -> architecture.ee.web.navigator.DefaultMenuRepository:
    architecture.ee.web.navigator.dao.MenuDao menuDao -> a
    java.util.Map holders -> a
    30:34:void <init>() -> <init>
    38:38:architecture.ee.web.navigator.dao.MenuDao getMenuDao() -> getMenuDao
    42:43:void setMenuDao(architecture.ee.web.navigator.dao.MenuDao) -> setMenuDao
    46:53:architecture.ee.web.navigator.MenuHolder getMenuHolder(architecture.ee.web.navigator.Menu) -> getMenuHolder
    57:58:java.util.Set getMenuNames(architecture.ee.web.navigator.Menu) -> getMenuNames
    62:63:architecture.ee.web.navigator.MenuComponent getMenuComponent(architecture.ee.web.navigator.Menu,java.lang.String) -> getMenuComponent
    67:69:architecture.ee.web.navigator.MenuComponent getMenuComponent(java.lang.String,java.lang.String) -> getMenuComponent
    74:83:void createMenu(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> createMenu
    88:99:void updateMenu(architecture.ee.web.navigator.Menu) -> updateMenu
    103:107:void removeMenu(architecture.ee.web.navigator.Menu) -> removeMenu
    110:112:void refershMenu(architecture.ee.web.navigator.Menu) -> refershMenu
    116:121:architecture.ee.web.navigator.Menu getMenuByName(java.lang.String) -> getMenuByName
    126:131:architecture.ee.web.navigator.Menu getMenuById(long) -> getMenuById
    135:135:int getTotalMenuCount() -> getTotalMenuCount
    139:148:java.util.List getMenus() -> getMenus
    152:161:java.util.List getMenus(int,int) -> getMenus
    166:166:void destory() -> destory
    170:170:void initialize() -> initialize
architecture.ee.web.navigator.Menu -> architecture.ee.web.navigator.Menu:
    long getMenuId() -> getMenuId
    java.lang.String getLocation() -> getLocation
    void setLoaction(java.lang.String) -> setLoaction
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    java.lang.String getMenuData() -> getMenuData
    void setMenuData(java.lang.String) -> setMenuData
architecture.ee.web.navigator.MenuAlreadyExistsException -> architecture.ee.web.navigator.MenuAlreadyExistsException:
    long serialVersionUID -> serialVersionUID
    24:26:void <init>() -> <init>
    29:31:void <init>(int) -> <init>
    34:36:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    39:41:void <init>(int,java.lang.String,java.lang.Throwable) -> <init>
    44:46:void <init>(java.lang.String) -> <init>
    49:51:void <init>(int,java.lang.String) -> <init>
    54:56:void <init>(java.lang.Throwable) -> <init>
    59:61:void <init>(int,java.lang.Throwable) -> <init>
architecture.ee.web.navigator.MenuBase -> architecture.ee.web.navigator.MenuBase:
    java.lang.String css -> css
    java.lang.String action -> action
    java.lang.String align -> align
    java.lang.String altImage -> altImage
    java.lang.String description -> description
    java.lang.String forward -> forward
    java.lang.String height -> height
    java.lang.String icon -> icon
    java.lang.String image -> image
    java.lang.String location -> location
    java.lang.String name -> name
    java.lang.String onclick -> onclick
    java.lang.String ondblclick -> ondblclick
    java.lang.String onmouseout -> onmouseout
    java.lang.String onmouseover -> onmouseover
    java.lang.String page -> page
    java.lang.String roles -> roles
    java.lang.String target -> target
    java.lang.String title -> title
    java.lang.String toolTip -> toolTip
    java.lang.String width -> width
    java.lang.String url -> a
    java.lang.String onContextMenu -> onContextMenu
    java.lang.String data -> data
    java.lang.String category -> category
    java.lang.String layout -> layout
    java.lang.String module -> module
    21:21:void <init>() -> <init>
    114:115:void setAction(java.lang.String) -> setAction
    122:122:java.lang.String getData() -> getData
    130:131:void setData(java.lang.String) -> setData
    138:138:java.lang.String getCategory() -> getCategory
    145:146:void setCategory(java.lang.String) -> setCategory
    153:153:java.lang.String getAction() -> getAction
    161:161:java.lang.String getCss() -> getCss
    168:169:void setCss(java.lang.String) -> setCss
    176:176:java.lang.String getAlign() -> getAlign
    186:187:void setAlign(java.lang.String) -> setAlign
    195:195:java.lang.String getIcon() -> getIcon
    202:203:void setIcon(java.lang.String) -> setIcon
    209:210:void setAltImage(java.lang.String) -> setAltImage
    216:216:java.lang.String getAltImage() -> getAltImage
    223:224:void setDescription(java.lang.String) -> setDescription
    230:230:java.lang.String getDescription() -> getDescription
    239:239:java.lang.String getLayout() -> getLayout
    247:248:void setLayout(java.lang.String) -> setLayout
    256:257:void setForward(java.lang.String) -> setForward
    263:263:java.lang.String getForward() -> getForward
    270:271:void setHeight(java.lang.String) -> setHeight
    277:277:java.lang.String getHeight() -> getHeight
    284:285:void setImage(java.lang.String) -> setImage
    291:291:java.lang.String getImage() -> getImage
    298:299:void setLocation(java.lang.String) -> setLocation
    305:305:java.lang.String getLocation() -> getLocation
    312:313:void setName(java.lang.String) -> setName
    319:319:java.lang.String getName() -> getName
    326:327:void setOnclick(java.lang.String) -> setOnclick
    333:333:java.lang.String getOnclick() -> getOnclick
    340:341:void setOnmouseout(java.lang.String) -> setOnmouseout
    347:347:java.lang.String getOnmouseout() -> getOnmouseout
    354:355:void setOnmouseover(java.lang.String) -> setOnmouseover
    361:361:java.lang.String getOnmouseover() -> getOnmouseover
    369:370:void setPage(java.lang.String) -> setPage
    377:377:java.lang.String getPage() -> getPage
    385:386:void setRoles(java.lang.String) -> setRoles
    393:393:java.lang.String getRoles() -> getRoles
    400:401:void setTarget(java.lang.String) -> setTarget
    407:407:java.lang.String getTarget() -> getTarget
    414:415:void setTitle(java.lang.String) -> setTitle
    421:421:java.lang.String getTitle() -> getTitle
    428:429:void setToolTip(java.lang.String) -> setToolTip
    435:435:java.lang.String getToolTip() -> getToolTip
    442:443:void setUrl(java.lang.String) -> setUrl
    449:449:java.lang.String getUrl() -> getUrl
    457:458:void setWidth(java.lang.String) -> setWidth
    464:464:java.lang.String getWidth() -> getWidth
    470:470:java.lang.String getOnContextMenu() -> getOnContextMenu
    477:478:void setOnContextMenu(java.lang.String) -> setOnContextMenu
    485:485:java.lang.String getOndblclick() -> getOndblclick
    493:494:void setOndblclick(java.lang.String) -> setOndblclick
    497:497:java.lang.String getModule() -> getModule
    501:502:void setModule(java.lang.String) -> setModule
architecture.ee.web.navigator.MenuComponent -> architecture.ee.web.navigator.MenuComponent:
    architecture.ee.web.navigator.MenuComponent[] _menuComponent -> _menuComponent
    java.util.List menuComponents -> menuComponents
    architecture.ee.web.navigator.MenuComponent parentMenu -> parentMenu
    boolean last -> a
    java.lang.String breadCrumb -> a
    27:33:void <init>() -> <init>
    41:49:void addMenuComponent(architecture.ee.web.navigator.MenuComponent) -> addMenuComponent
    52:52:architecture.ee.web.navigator.MenuComponent[] getMenuComponents() -> getMenuComponents
    56:60:void setMenuComponents(architecture.ee.web.navigator.MenuComponent[]) -> setMenuComponents
    63:70:void setParent(architecture.ee.web.navigator.MenuComponent) -> setParent
    73:73:architecture.ee.web.navigator.MenuComponent getParent() -> getParent
    81:81:java.util.List getComponents() -> getComponents
    90:95:boolean equals(java.lang.Object) -> equals
    124:124:int getMenuDepth() -> getMenuDepth
    128:139:int getMenuDepth(architecture.ee.web.navigator.MenuComponent,int) -> a
    144:144:boolean isSetIcon() -> isSetIcon
    153:153:boolean isLast() -> isLast
    162:163:void setLast(boolean) -> setLast
    169:173:void removeChildren() -> removeChildren
    176:176:java.lang.String getBreadCrumb() -> getBreadCrumb
    185:193:void setBreadCrumb(java.lang.String) -> setBreadCrumb
    196:199:void setChildBreadCrumb(java.lang.String) -> a
    202:202:java.lang.String toString() -> toString
    29:29:void <clinit>() -> <clinit>
architecture.ee.web.navigator.MenuHolder -> architecture.ee.web.navigator.MenuHolder:
    java.util.Set getMenuNames() -> getMenuNames
    java.util.List getTopMenus() -> getTopMenus
    architecture.ee.web.navigator.MenuComponent getMenu(java.lang.String) -> getMenu
    void addMenu(architecture.ee.web.navigator.MenuComponent) -> addMenu
    void removeMenu(java.lang.String) -> removeMenu
    void removeAllMenus() -> removeAllMenus
    void reload() -> reload
    architecture.ee.web.navigator.MenuComponent getMenu(java.lang.String,java.lang.String) -> getMenu
    int getMenuDepth(java.lang.String) -> getMenuDepth
    int getMenuDepth() -> getMenuDepth
    architecture.ee.web.navigator.MenuComponent[] getTopMenusAsArray() -> getTopMenusAsArray
    java.util.List getTopMenusNames() -> getTopMenusNames
    void setBreadCrumbDelimiter(java.lang.String) -> setBreadCrumbDelimiter
    void buildBreadCrumbs() -> buildBreadCrumbs
    void buildBreadCrumbs(java.lang.String) -> buildBreadCrumbs
architecture.ee.web.navigator.MenuNotFoundException -> architecture.ee.web.navigator.MenuNotFoundException:
    24:26:void <init>() -> <init>
    29:31:void <init>(int,java.lang.String,java.lang.Throwable) -> <init>
    34:36:void <init>(int,java.lang.String) -> <init>
    39:41:void <init>(int,java.lang.Throwable) -> <init>
    44:46:void <init>(int) -> <init>
    49:51:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    54:56:void <init>(java.lang.String) -> <init>
    59:61:void <init>(java.lang.Throwable) -> <init>
architecture.ee.web.navigator.MenuRepository -> architecture.ee.web.navigator.MenuRepository:
    java.util.Set getMenuNames(architecture.ee.web.navigator.Menu) -> getMenuNames
    architecture.ee.web.navigator.MenuComponent getMenuComponent(java.lang.String,java.lang.String) -> getMenuComponent
    architecture.ee.web.navigator.MenuComponent getMenuComponent(architecture.ee.web.navigator.Menu,java.lang.String) -> getMenuComponent
    int getTotalMenuCount() -> getTotalMenuCount
    java.util.List getMenus() -> getMenus
    java.util.List getMenus(int,int) -> getMenus
    architecture.ee.web.navigator.Menu getMenu(long) -> getMenu
    architecture.ee.web.navigator.Menu getMenu(java.lang.String) -> getMenu
    void createMenu(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> createMenu
    void updateMenu(architecture.ee.web.navigator.Menu) -> updateMenu
    void removeMenu(architecture.ee.web.navigator.Menu) -> removeMenu
    void refershMenu(architecture.ee.web.navigator.Menu) -> refershMenu
architecture.ee.web.navigator.XmlMenuHolder -> architecture.ee.web.navigator.XmlMenuHolder:
    java.lang.String content -> a
    28:30:void <init>(java.lang.String) -> <init>
    33:43:void reload() -> reload
    48:94:org.apache.commons.digester3.Digester initDigester() -> initDigester
architecture.ee.web.navigator.dao.MenuDao -> architecture.ee.web.navigator.dao.MenuDao:
    architecture.ee.web.navigator.Menu getMenuByName(java.lang.String) -> getMenuByName
    architecture.ee.web.navigator.Menu getMenuById(java.lang.Long) -> getMenuById
    architecture.ee.web.navigator.Menu updateMenu(architecture.ee.web.navigator.Menu) -> updateMenu
    architecture.ee.web.navigator.Menu createMenu(architecture.ee.web.navigator.Menu) -> createMenu
    void removeMenu(architecture.ee.web.navigator.Menu) -> removeMenu
    int getTotalMenuCount() -> getTotalMenuCount
    java.util.List getAllMenuIds() -> getAllMenuIds
    java.util.List getMenuIds(int,int) -> getMenuIds
architecture.ee.web.navigator.dao.impl.JdbcMenuDao -> architecture.ee.web.navigator.dao.impl.JdbcMenuDao:
    org.springframework.jdbc.core.RowMapper menuMapper -> a
    architecture.ee.jdbc.property.dao.ExtendedPropertyDao extendedPropertyDao -> a
    java.lang.String sequencerName -> a
    java.lang.String menuPropertyTableName -> b
    java.lang.String menuPropertyPrimaryColumnName -> c
    37:57:void <init>() -> <init>
    61:62:void setExtendedPropertyDao(architecture.ee.jdbc.property.dao.ExtendedPropertyDao) -> setExtendedPropertyDao
    66:66:java.lang.String getSequencerName() -> getSequencerName
    71:72:void setSequencerName(java.lang.String) -> setSequencerName
    75:75:architecture.ee.jdbc.property.dao.ExtendedPropertyDao getExtendedPropertyDao() -> getExtendedPropertyDao
    80:80:java.lang.String getMenuPropertyTableName() -> getMenuPropertyTableName
    85:86:void setMenuPropertyTableName(java.lang.String) -> setMenuPropertyTableName
    90:90:java.lang.String getMenuPropertyPrimaryColumnName() -> getMenuPropertyPrimaryColumnName
    96:97:void setMenuPropertyPrimaryColumnName(java.lang.String) -> setMenuPropertyPrimaryColumnName
    101:101:java.util.Map getMenuProperties(long) -> getMenuProperties
    105:106:void deleteMenuProperties(long) -> deleteMenuProperties
    109:110:void setMenuProperties(long,java.util.Map) -> setMenuProperties
    115:134:architecture.ee.web.navigator.Menu getMenuByName(java.lang.String) -> getMenuByName
    138:153:architecture.ee.web.navigator.Menu getMenuById(java.lang.Long) -> getMenuById
    157:157:java.util.List getAllMenuIds() -> getAllMenuIds
    161:161:java.util.List getMenuIds(int,int) -> getMenuIds
    186:196:architecture.ee.web.navigator.Menu updateMenu(architecture.ee.web.navigator.Menu) -> updateMenu
    201:219:architecture.ee.web.navigator.Menu createMenu(architecture.ee.web.navigator.Menu) -> createMenu
    224:227:void removeMenu(architecture.ee.web.navigator.Menu) -> removeMenu
    230:231:void removeMenuXmlData(architecture.ee.web.navigator.Menu) -> removeMenuXmlData
    234:238:void saveMenuXmlData(architecture.ee.web.navigator.Menu) -> saveMenuXmlData
    241:241:java.lang.String getMenuXmlData(architecture.ee.web.navigator.Menu) -> getMenuXmlData
    247:247:int getTotalMenuCount() -> getTotalMenuCount
architecture.ee.web.navigator.dao.impl.JdbcMenuDao$1 -> architecture.ee.web.navigator.dao.impl.JdbcMenuDao$1:
    39:39:void <init>() -> <init>
    39:39:java.lang.Object mapRow(java.sql.ResultSet,int) -> mapRow
    1041:1049:architecture.ee.web.navigator.Menu mapRow$3bcd4596(java.sql.ResultSet):41:49 -> mapRow
    1041:1049:java.lang.Object mapRow(java.sql.ResultSet,int):39 -> mapRow
architecture.ee.web.photo.album.Album -> architecture.ee.web.photo.album.Album:
    long getAlbumId() -> getAlbumId
    void setAlbumId(long) -> setAlbumId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    boolean isShared() -> isShared
    void setShared(boolean) -> setShared
    boolean isCollaborate() -> isCollaborate
    void setCollaborate(boolean) -> setCollaborate
    architecture.common.user.User getUser() -> getUser
    void setUser(architecture.common.user.User) -> setUser
architecture.ee.web.photo.album.AlbumManager -> architecture.ee.web.photo.album.AlbumManager:
    int getTotalAlbumCount(architecture.common.user.User) -> getTotalAlbumCount
    architecture.ee.web.photo.album.Album getAlbum(long) -> getAlbum
    java.util.List getAlbums(architecture.common.user.User) -> getAlbums
    java.util.List getAlbums(architecture.common.user.User,int,int) -> getAlbums
    void saveOrUpdate(architecture.ee.web.photo.album.Album) -> saveOrUpdate
architecture.ee.web.photo.album.AlbumNotFoundException -> architecture.ee.web.photo.album.AlbumNotFoundException:
    23:24:void <init>() -> <init>
    27:28:void <init>(int,java.lang.String,java.lang.Throwable) -> <init>
    31:32:void <init>(int,java.lang.String) -> <init>
    35:36:void <init>(int,java.lang.Throwable) -> <init>
    39:40:void <init>(int) -> <init>
    43:44:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    47:48:void <init>(java.lang.String) -> <init>
    51:52:void <init>(java.lang.Throwable) -> <init>
architecture.ee.web.photo.album.DefaultAlbum -> architecture.ee.web.photo.album.DefaultAlbum:
    boolean shared -> a
    boolean collaborate -> b
    architecture.common.user.User user -> a
    long albumId -> a
    java.lang.String name -> a
    java.lang.String description -> b
    42:54:void <init>() -> <init>
    56:62:void <init>(long) -> <init>
    65:65:long getAlbumId() -> getAlbumId
    69:70:void setAlbumId(long) -> setAlbumId
    73:73:java.lang.String getName() -> getName
    77:78:void setName(java.lang.String) -> setName
    81:81:java.lang.String getDescription() -> getDescription
    85:86:void setDescription(java.lang.String) -> setDescription
    89:89:boolean isShared() -> isShared
    93:94:void setShared(boolean) -> setShared
    97:97:boolean isCollaborate() -> isCollaborate
    101:102:void setCollaborate(boolean) -> setCollaborate
    105:105:architecture.common.user.User getUser() -> getUser
    109:110:void setUser(architecture.common.user.User) -> setUser
    114:114:java.io.Serializable getPrimaryKeyObject() -> getPrimaryKeyObject
    119:119:int getModelObjectType() -> getModelObjectType
    124:131:int getCachedSize() -> getCachedSize
architecture.ee.web.photo.album.DefaultAlbumManager -> architecture.ee.web.photo.album.DefaultAlbumManager:
    org.apache.commons.logging.Log log -> a
    architecture.ee.web.photo.album.dao.AlbumDao albumDao -> a
    net.sf.ehcache.Cache albumCache -> a
    35:42:void <init>() -> <init>
    45:45:architecture.ee.web.photo.album.dao.AlbumDao getAlbumDao() -> getAlbumDao
    49:50:void setAlbumDao(architecture.ee.web.photo.album.dao.AlbumDao) -> setAlbumDao
    53:53:net.sf.ehcache.Cache getAlbumCache() -> getAlbumCache
    57:58:void setAlbumCache(net.sf.ehcache.Cache) -> setAlbumCache
    62:62:int getTotalAlbumCount(architecture.common.user.User) -> getTotalAlbumCount
    67:77:architecture.ee.web.photo.album.Album getAlbum(long) -> getAlbum
    1082:1084:architecture.ee.web.photo.album.Album getAlbumInCache(java.lang.Long):82:84 -> getAlbum
    1082:1084:architecture.ee.web.photo.album.Album getAlbum(long):67 -> getAlbum
    1088:1092:void updateCache(architecture.ee.web.photo.album.Album):88:92 -> getAlbum
    1088:1092:architecture.ee.web.photo.album.Album getAlbum(long):75 -> getAlbum
    101:110:java.util.List getAlbums(architecture.common.user.User) -> getAlbums
    114:123:java.util.List getAlbums(architecture.common.user.User,int,int) -> getAlbums
    128:139:void saveOrUpdate(architecture.ee.web.photo.album.Album) -> saveOrUpdate
    1095:1098:void clearCache(architecture.ee.web.photo.album.Album):95:98 -> saveOrUpdate
    1095:1098:void saveOrUpdate(architecture.ee.web.photo.album.Album):138 -> saveOrUpdate
architecture.ee.web.photo.album.dao.AlbumDao -> architecture.ee.web.photo.album.dao.AlbumDao:
    void saveOrUpdateAlbum(architecture.ee.web.photo.album.Album) -> saveOrUpdateAlbum
    architecture.ee.web.photo.album.Album getAlbumById(long) -> getAlbumById
    int getAlbumCount(architecture.common.user.User) -> getAlbumCount
    java.util.List getAlbumIds(architecture.common.user.User) -> getAlbumIds
    java.util.List getAlbumIds(architecture.common.user.User,int,int) -> getAlbumIds
architecture.ee.web.photo.album.dao.jdbc.JdbcAlbumDao -> architecture.ee.web.photo.album.dao.jdbc.JdbcAlbumDao:
    architecture.ee.jdbc.property.dao.ExtendedPropertyDao extendedPropertyDao -> a
    java.lang.String sequencerName -> a
    java.lang.String albumPropertyTableName -> b
    java.lang.String albumPropertyPrimaryColumnName -> c
    org.springframework.jdbc.core.RowMapper albumMapper -> a
    39:62:void <init>() -> <init>
    66:66:java.lang.String getSequencerName() -> getSequencerName
    71:72:void setSequencerName(java.lang.String) -> setSequencerName
    76:76:java.lang.String getAlbumPropertyTableName() -> getAlbumPropertyTableName
    81:82:void setAlbumPropertyTableName(java.lang.String) -> setAlbumPropertyTableName
    86:86:java.lang.String getAlbumPropertyPrimaryColumnName() -> getAlbumPropertyPrimaryColumnName
    91:92:void setAlbumPropertyPrimaryColumnName(java.lang.String) -> setAlbumPropertyPrimaryColumnName
    96:96:architecture.ee.jdbc.property.dao.ExtendedPropertyDao getExtendedPropertyDao() -> getExtendedPropertyDao
    100:101:void setExtendedPropertyDao(architecture.ee.jdbc.property.dao.ExtendedPropertyDao) -> setExtendedPropertyDao
    104:104:java.util.Map getAlbumProperties(long) -> getAlbumProperties
    108:109:void setAlbumProperties(long,java.util.Map) -> setAlbumProperties
    112:113:void deleteAlbumProperties(long) -> deleteAlbumProperties
    116:116:java.lang.Long nextAlbumId() -> nextAlbumId
    121:147:void saveOrUpdateAlbum(architecture.ee.web.photo.album.Album) -> saveOrUpdateAlbum
    150:154:architecture.ee.web.photo.album.Album getAlbumById(long) -> getAlbumById
    158:158:int getAlbumCount(architecture.common.user.User) -> getAlbumCount
    164:164:java.util.List getAlbumIds(architecture.common.user.User) -> getAlbumIds
    170:170:java.util.List getAlbumIds(architecture.common.user.User,int,int) -> getAlbumIds
architecture.ee.web.photo.album.dao.jdbc.JdbcAlbumDao$1 -> architecture.ee.web.photo.album.dao.jdbc.JdbcAlbumDao$1:
    43:43:void <init>() -> <init>
    43:43:java.lang.Object mapRow(java.sql.ResultSet,int) -> mapRow
    1045:1054:architecture.ee.web.photo.album.Album mapRow$2f7d30e3(java.sql.ResultSet):45:54 -> mapRow
    1045:1054:java.lang.Object mapRow(java.sql.ResultSet,int):43 -> mapRow
architecture.ee.web.security.authentication.AuthFactory -> architecture.ee.web.security.authentication.AuthFactory:
    35:36:void <init>() -> <init>
architecture.ee.web.security.spring.authentication.ExtendedAuthenticationSuccessHandler -> architecture.ee.web.security.spring.authentication.ExtendedAuthenticationSuccessHandler:
    34:34:void <init>() -> <init>
    42:66:void onAuthenticationSuccess(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.Authentication) -> onAuthenticationSuccess
    71:74:architecture.ee.util.OutputFormat getOutputFormat(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> getOutputFormat
architecture.ee.web.security.spring.util.NonAjaxRequestMatcher -> architecture.ee.web.security.spring.util.NonAjaxRequestMatcher:
    31:31:void <init>() -> <init>
    35:43:boolean matches(javax.servlet.http.HttpServletRequest) -> matches
architecture.ee.web.servlet.FreeMarkerViewRendererServlet -> architecture.ee.web.servlet.FreeMarkerViewRendererServlet:
    32:35:void <init>() -> <init>
    41:47:void renderView(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> renderView
architecture.ee.web.servlet.VelocityViewRendererServlet -> architecture.ee.web.servlet.VelocityViewRendererServlet:
    30:33:void <init>() -> <init>
    39:45:void renderView(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> renderView
architecture.ee.web.servlet.ViewRendererServlet -> architecture.ee.web.servlet.ViewRendererServlet:
    org.apache.commons.logging.Log log -> log
    org.springframework.web.servlet.RequestToViewNameTranslator translator -> translator
    java.lang.String viewResolverName -> viewResolverName
    49:56:void <init>() -> <init>
    61:62:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> doGet
    67:68:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> doPost
    72:75:void init() -> init
    83:98:void processRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> processRequest
    104:112:void renderView(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> renderView
    118:122:java.util.Map resolveModel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> resolveModel
    130:163:org.springframework.web.servlet.View resolvingView(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> resolvingView
    167:167:org.springframework.web.servlet.ViewResolver getViewResolver(java.lang.String) -> getViewResolver
    47:47:void <clinit>() -> <clinit>
architecture.ee.web.site.DefaultWebSite -> architecture.ee.web.site.DefaultWebSite:
    java.lang.String displayName -> a
    architecture.common.user.Company company -> a
    long webSiteId -> a
    boolean enabled -> a
    boolean allowAnonymousAccess -> b
    architecture.common.user.User user -> a
    java.lang.String url -> b
    architecture.ee.web.navigator.Menu menu -> a
    53:55:void <init>() -> <init>
    66:80:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,architecture.common.user.Company,architecture.common.user.User) -> <init>
    82:96:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,architecture.common.user.User) -> <init>
    98:100:void <init>(long) -> <init>
    106:106:architecture.common.user.Company getCompany() -> getCompany
    114:115:void setCompany(architecture.common.user.Company) -> setCompany
    121:121:java.lang.String getUrl() -> getUrl
    128:129:void setUrl(java.lang.String) -> setUrl
    135:135:boolean isAllowAnonymousAccess() -> isAllowAnonymousAccess
    142:143:void setAllowAnonymousAccess(boolean) -> setAllowAnonymousAccess
    149:149:architecture.common.user.User getUser() -> getUser
    157:158:void setUser(architecture.common.user.User) -> setUser
    164:164:boolean isEnabled() -> isEnabled
    171:172:void setEnabled(boolean) -> setEnabled
    176:176:java.io.Serializable getPrimaryKeyObject() -> getPrimaryKeyObject
    183:183:java.lang.String getDisplayName() -> getDisplayName
    190:191:void setDisplayName(java.lang.String) -> setDisplayName
    197:197:long getWebSiteId() -> getWebSiteId
    204:205:void setWebSiteId(long) -> setWebSiteId
    213:213:architecture.ee.web.navigator.Menu getMenu() -> getMenu
    221:222:void setMenu(architecture.ee.web.navigator.Menu) -> setMenu
    226:226:int getModelObjectType() -> getModelObjectType
    231:231:int getCachedSize() -> getCachedSize
    235:235:java.lang.String toString() -> toString
architecture.ee.web.site.DefaultWebSiteManager -> architecture.ee.web.site.DefaultWebSiteManager:
    org.apache.commons.logging.Log log -> a
    architecture.common.user.UserManager userManager -> a
    architecture.common.user.CompanyManager companyManager -> a
    architecture.ee.web.site.dao.WebSiteDao webSiteDao -> a
    net.sf.ehcache.Cache webSiteCache -> a
    net.sf.ehcache.Cache webSiteIdCache -> b
    net.sf.ehcache.Cache webSiteUrlCache -> c
    net.sf.ehcache.Cache webPageIdCache -> d
    net.sf.ehcache.Cache webPageCache -> e
    42:62:void <init>() -> <init>
    69:69:net.sf.ehcache.Cache getWebSiteUrlCache() -> getWebSiteUrlCache
    77:78:void setWebSiteUrlCache(net.sf.ehcache.Cache) -> setWebSiteUrlCache
    84:84:architecture.common.user.UserManager getUserManager() -> getUserManager
    92:93:void setUserManager(architecture.common.user.UserManager) -> setUserManager
    99:99:architecture.common.user.CompanyManager getCompanyManager() -> getCompanyManager
    107:108:void setCompanyManager(architecture.common.user.CompanyManager) -> setCompanyManager
    114:114:net.sf.ehcache.Cache getWebPageIdCache() -> getWebPageIdCache
    122:123:void setWebPageIdCache(net.sf.ehcache.Cache) -> setWebPageIdCache
    129:129:net.sf.ehcache.Cache getWebPageCache() -> getWebPageCache
    137:138:void setWebPageCache(net.sf.ehcache.Cache) -> setWebPageCache
    144:144:architecture.ee.web.site.dao.WebSiteDao getWebSiteDao() -> getWebSiteDao
    152:153:void setWebSiteDao(architecture.ee.web.site.dao.WebSiteDao) -> setWebSiteDao
    159:159:net.sf.ehcache.Cache getWebSiteCache() -> getWebSiteCache
    167:168:void setWebSiteCache(net.sf.ehcache.Cache) -> setWebSiteCache
    174:174:net.sf.ehcache.Cache getWebSiteIdCache() -> getWebSiteIdCache
    182:183:void setWebSiteIdCache(net.sf.ehcache.Cache) -> setWebSiteIdCache
    189:189:net.sf.ehcache.Cache getWebSiteUrllCache() -> getWebSiteUrllCache
    197:198:void setWebSiteUrllCache(net.sf.ehcache.Cache) -> setWebSiteUrllCache
    210:213:void createWebSite(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,architecture.common.user.Company,architecture.common.user.User) -> createWebSite
    218:227:void createWebSite(architecture.ee.web.site.WebSite) -> createWebSite
    231:247:void updateWebSite(architecture.ee.web.site.WebSite) -> updateWebSite
    250:258:java.util.List getWebSites(architecture.common.user.Company) -> getWebSites
    262:262:int getWebCount(architecture.common.user.Company) -> getWebCount
    266:274:java.util.List findWebSitesByName(java.lang.String) -> findWebSitesByName
    278:286:java.util.List findWebSitesByUrl(java.lang.String) -> findWebSitesByUrl
    290:298:architecture.ee.web.site.WebSite getWebSiteByName(java.lang.String) -> getWebSiteByName
    303:320:architecture.ee.web.site.WebSite getWebSiteByUrl(java.lang.String) -> getWebSiteByUrl
    325:346:architecture.ee.web.site.WebSite getWebSiteById(long) -> getWebSiteById
    350:353:void refreshWebSite(architecture.ee.web.site.WebSite) -> refreshWebSite
    357:370:architecture.ee.web.site.page.WebPage getWebPageByName(architecture.ee.web.site.WebSite,java.lang.String) -> getWebPageByName
    374:374:java.lang.String getWebPageKey(java.lang.String,java.lang.String) -> getWebPageKey
    379:385:architecture.ee.web.site.page.WebPage getWebPageById(java.lang.Long) -> getWebPageById
    390:403:void updateWebPage(architecture.ee.web.site.page.WebPage) -> updateWebPage
    407:411:void removeWebPage(architecture.ee.web.site.page.WebPage) -> removeWebPage
    415:423:java.util.List getWebPages(architecture.ee.web.site.WebSite) -> getWebPages
    428:436:java.util.List getWebPages(architecture.ee.web.site.WebSite,int,int) -> getWebPages
    442:442:int getWebPageCount(architecture.ee.web.site.WebSite) -> getWebPageCount
    448:456:java.util.List getWebPages(architecture.ee.web.site.WebSite,java.util.List) -> getWebPages
    462:470:java.util.List getWebPages(architecture.ee.web.site.WebSite,java.util.List,int,int) -> getWebPages
    476:476:int getWebPageCount(architecture.ee.web.site.WebSite,java.util.List) -> getWebPageCount
architecture.ee.web.site.WebPageNotFoundException -> architecture.ee.web.site.WebPageNotFoundException:
    22:24:void <init>() -> <init>
    32:34:void <init>(int,java.lang.String,java.lang.Throwable) -> <init>
    41:43:void <init>(int,java.lang.String) -> <init>
    50:52:void <init>(int,java.lang.Throwable) -> <init>
    58:60:void <init>(int) -> <init>
    67:69:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    75:77:void <init>(java.lang.String) -> <init>
    83:85:void <init>(java.lang.Throwable) -> <init>
architecture.ee.web.site.WebSite -> architecture.ee.web.site.WebSite:
    java.lang.String getDisplayName() -> getDisplayName
    void setDisplayName(java.lang.String) -> setDisplayName
    boolean isAllowAnonymousAccess() -> isAllowAnonymousAccess
    void setAllowAnonymousAccess(boolean) -> setAllowAnonymousAccess
    long getWebSiteId() -> getWebSiteId
    architecture.common.user.User getUser() -> getUser
    architecture.common.user.Company getCompany() -> getCompany
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    void setMenu(architecture.ee.web.navigator.Menu) -> setMenu
    architecture.ee.web.navigator.Menu getMenu() -> getMenu
architecture.ee.web.site.WebSiteAlreadyExistsExcaption -> architecture.ee.web.site.WebSiteAlreadyExistsExcaption:
    22:24:void <init>() -> <init>
    27:29:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    32:34:void <init>(java.lang.String) -> <init>
    37:39:void <init>(java.lang.Throwable) -> <init>
architecture.ee.web.site.WebSiteDomainMapper -> architecture.ee.web.site.WebSiteDomainMapper:
    long webSiteId -> a
    java.lang.String[] domains -> a
    31:34:void <init>(long,java.lang.String) -> <init>
    40:40:long getWebSiteId() -> getWebSiteId
    47:47:java.lang.String[] getDomains() -> getDomains
    51:56:boolean isMatch(java.lang.String) -> isMatch
architecture.ee.web.site.WebSiteManager -> architecture.ee.web.site.WebSiteManager:
    void createWebSite(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,architecture.common.user.Company,architecture.common.user.User) -> createWebSite
    void createWebSite(architecture.ee.web.site.WebSite) -> createWebSite
    void updateWebSite(architecture.ee.web.site.WebSite) -> updateWebSite
    java.util.List getWebSites(architecture.common.user.Company) -> getWebSites
    int getWebCount(architecture.common.user.Company) -> getWebCount
    java.util.List findWebSitesByName(java.lang.String) -> findWebSitesByName
    java.util.List findWebSitesByUrl(java.lang.String) -> findWebSitesByUrl
    architecture.ee.web.site.WebSite getWebSiteByName(java.lang.String) -> getWebSiteByName
    architecture.ee.web.site.WebSite getWebSiteByUrl(java.lang.String) -> getWebSiteByUrl
    architecture.ee.web.site.WebSite getWebSiteById(long) -> getWebSiteById
    void refreshWebSite(architecture.ee.web.site.WebSite) -> refreshWebSite
    architecture.ee.web.site.page.WebPage getWebPageByName(architecture.ee.web.site.WebSite,java.lang.String) -> getWebPageByName
    architecture.ee.web.site.page.WebPage getWebPageById(java.lang.Long) -> getWebPageById
    void updateWebPage(architecture.ee.web.site.page.WebPage) -> updateWebPage
    void removeWebPage(architecture.ee.web.site.page.WebPage) -> removeWebPage
    java.util.List getWebPages(architecture.ee.web.site.WebSite) -> getWebPages
    java.util.List getWebPages(architecture.ee.web.site.WebSite,int,int) -> getWebPages
    int getWebPageCount(architecture.ee.web.site.WebSite) -> getWebPageCount
    java.util.List getWebPages(architecture.ee.web.site.WebSite,java.util.List) -> getWebPages
    java.util.List getWebPages(architecture.ee.web.site.WebSite,java.util.List,int,int) -> getWebPages
    int getWebPageCount(architecture.ee.web.site.WebSite,java.util.List) -> getWebPageCount
architecture.ee.web.site.WebSiteNotFoundException -> architecture.ee.web.site.WebSiteNotFoundException:
    22:24:void <init>() -> <init>
    27:29:void <init>(int,java.lang.String,java.lang.Throwable) -> <init>
    32:34:void <init>(int,java.lang.String) -> <init>
    37:39:void <init>(int,java.lang.Throwable) -> <init>
    42:44:void <init>(int) -> <init>
    47:49:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    52:54:void <init>(java.lang.String) -> <init>
    57:59:void <init>(java.lang.Throwable) -> <init>
architecture.ee.web.site.WebSitePolicy -> architecture.ee.web.site.WebSitePolicy:
architecture.ee.web.site.dao.WebSiteDao -> architecture.ee.web.site.dao.WebSiteDao:
    void createWebSite(architecture.ee.web.site.WebSite) -> createWebSite
    void updateWebSite(architecture.ee.web.site.WebSite) -> updateWebSite
    architecture.ee.web.site.WebSite getWebSiteById(long) -> getWebSiteById
    architecture.ee.web.site.WebSite getWebSiteByName(java.lang.String) -> getWebSiteByName
    architecture.ee.web.site.WebSite getWebSiteByUrl(java.lang.String) -> getWebSiteByUrl
    java.util.List findWebSitesByUrl(java.lang.String) -> findWebSitesByUrl
    java.util.List findWebSitesByName(java.lang.String) -> findWebSitesByName
    int getWebSiteCount(long) -> getWebSiteCount
    java.util.List getWebSiteIds(long) -> getWebSiteIds
    java.util.List getWebSiteDomainMappers() -> getWebSiteDomainMappers
    architecture.ee.web.site.page.WebPage getWebPageByName(long,java.lang.String) -> getWebPageByName
    architecture.ee.web.site.page.WebPage getWebPageById(long) -> getWebPageById
    int getWebPageCount(long) -> getWebPageCount
    java.util.List getWebPageIds(long) -> getWebPageIds
    java.util.List getWebPageIds(long,int,int) -> getWebPageIds
    int getWebPageCount(long,java.util.List) -> getWebPageCount
    java.util.List getWebPageIds(long,java.util.List) -> getWebPageIds
    java.util.List getWebPageIds(long,java.util.List,int,int) -> getWebPageIds
    void createWebPage(architecture.ee.web.site.page.WebPage) -> createWebPage
    void updateWebPage(architecture.ee.web.site.page.WebPage) -> updateWebPage
    void deleteWebPage(architecture.ee.web.site.page.WebPage) -> deleteWebPage
architecture.ee.web.site.dao.jdbc.JdbcWebSiteDao -> architecture.ee.web.site.dao.jdbc.JdbcWebSiteDao:
    architecture.ee.jdbc.property.dao.ExtendedPropertyDao extendedPropertyDao -> a
    java.lang.String sequencerName -> a
    java.lang.String webSitePropertyTableName -> b
    java.lang.String webSitePropertyPrimaryColumnName -> c
    java.lang.String webPageSequencerName -> d
    java.lang.String webPagePropertyTableName -> e
    java.lang.String webPagePropertyPrimaryColumnName -> f
    org.springframework.jdbc.core.RowMapper pageMapper -> a
    org.springframework.jdbc.core.RowMapper siteMapper -> b
    43:80:void <init>() -> <init>
    106:106:java.lang.Long nextId() -> nextId
    113:113:architecture.ee.jdbc.property.dao.ExtendedPropertyDao getExtendedPropertyDao() -> getExtendedPropertyDao
    121:122:void setExtendedPropertyDao(architecture.ee.jdbc.property.dao.ExtendedPropertyDao) -> setExtendedPropertyDao
    128:128:java.lang.String getSequencerName() -> getSequencerName
    136:137:void setSequencerName(java.lang.String) -> setSequencerName
    143:143:java.lang.String getWebSitePropertyTableName() -> getWebSitePropertyTableName
    151:152:void setWebSitePropertyTableName(java.lang.String) -> setWebSitePropertyTableName
    158:158:java.lang.String getWebSitePropertyPrimaryColumnName() -> getWebSitePropertyPrimaryColumnName
    166:167:void setWebSitePropertyPrimaryColumnName(java.lang.String) -> setWebSitePropertyPrimaryColumnName
    173:173:java.lang.String getWebPageSequencerName() -> getWebPageSequencerName
    181:182:void setWebPageSequencerName(java.lang.String) -> setWebPageSequencerName
    188:188:java.lang.String getWebPagePropertyTableName() -> getWebPagePropertyTableName
    196:197:void setWebPagePropertyTableName(java.lang.String) -> setWebPagePropertyTableName
    203:203:java.lang.String getWebPagePropertyPrimaryColumnName() -> getWebPagePropertyPrimaryColumnName
    211:212:void setWebPagePropertyPrimaryColumnName(java.lang.String) -> setWebPagePropertyPrimaryColumnName
    215:215:java.util.Map getWebSiteProperties(long) -> getWebSiteProperties
    219:220:void deleteWebSiteProperties(long) -> deleteWebSiteProperties
    223:225:void setWebSiteProperties(long,java.util.Map) -> setWebSiteProperties
    228:247:void createWebSite(architecture.ee.web.site.WebSite) -> createWebSite
    251:262:void updateWebSite(architecture.ee.web.site.WebSite) -> updateWebSite
    266:272:architecture.ee.web.site.WebSite getWebSiteById(long) -> getWebSiteById
    278:282:architecture.ee.web.site.WebSite getWebSiteByName(java.lang.String) -> getWebSiteByName
    288:292:architecture.ee.web.site.WebSite getWebSiteByUrl(java.lang.String) -> getWebSiteByUrl
    297:297:int getWebSiteCount(long) -> getWebSiteCount
    303:303:java.util.List getWebSiteIds(long) -> getWebSiteIds
    309:309:java.util.List findWebSitesByUrl(java.lang.String) -> findWebSitesByUrl
    315:315:java.util.List findWebSitesByName(java.lang.String) -> findWebSitesByName
    321:321:java.util.List getWebSiteDomainMappers() -> getWebSiteDomainMappers
    331:331:java.util.Map getWebPageProperties(long) -> getWebPageProperties
    335:336:void deleteWebPageProperties(long) -> deleteWebPageProperties
    339:341:void setWebPageProperties(long,java.util.Map) -> setWebPageProperties
    346:352:architecture.ee.web.site.page.WebPage getWebPageByName(long,java.lang.String) -> getWebPageByName
    359:365:architecture.ee.web.site.page.WebPage getWebPageById(long) -> getWebPageById
    371:371:int getWebPageCount(long) -> getWebPageCount
    378:378:java.util.List getWebPageIds(long) -> getWebPageIds
    385:385:java.util.List getWebPageIds(long,int,int) -> getWebPageIds
    392:409:void createWebPage(architecture.ee.web.site.page.WebPage) -> createWebPage
    413:423:void updateWebPage(architecture.ee.web.site.page.WebPage) -> updateWebPage
    429:429:void deleteWebPage(architecture.ee.web.site.page.WebPage) -> deleteWebPage
    433:435:int getWebPageCount(long,java.util.List) -> getWebPageCount
    442:444:java.util.List getWebPageIds(long,java.util.List) -> getWebPageIds
    451:453:java.util.List getWebPageIds(long,java.util.List,int,int) -> getWebPageIds
architecture.ee.web.site.dao.jdbc.JdbcWebSiteDao$1 -> architecture.ee.web.site.dao.jdbc.JdbcWebSiteDao$1:
    64:64:void <init>() -> <init>
    64:64:java.lang.Object mapRow(java.sql.ResultSet,int) -> mapRow
    1066:1076:architecture.ee.web.site.page.WebPage mapRow$1aa91fd6(java.sql.ResultSet):66:76 -> mapRow
    1066:1076:java.lang.Object mapRow(java.sql.ResultSet,int):64 -> mapRow
architecture.ee.web.site.dao.jdbc.JdbcWebSiteDao$2 -> architecture.ee.web.site.dao.jdbc.JdbcWebSiteDao$2:
    80:80:void <init>() -> <init>
    80:80:java.lang.Object mapRow(java.sql.ResultSet,int) -> mapRow
    1082:1094:architecture.ee.web.site.WebSite mapRow$49a76c32(java.sql.ResultSet):82:94 -> mapRow
    1082:1094:java.lang.Object mapRow(java.sql.ResultSet,int):80 -> mapRow
architecture.ee.web.site.dao.jdbc.JdbcWebSiteDao$3 -> architecture.ee.web.site.dao.jdbc.JdbcWebSiteDao$3:
    323:323:void <init>() -> <init>
    323:323:java.lang.Object mapRow(java.sql.ResultSet,int) -> mapRow
    1325:1325:architecture.ee.web.site.WebSiteDomainMapper mapRow$2daf5857(java.sql.ResultSet):325:325 -> mapRow
    1325:1325:java.lang.Object mapRow(java.sql.ResultSet,int):323 -> mapRow
architecture.ee.web.site.page.WebPage -> architecture.ee.web.site.page.WebPage:
    long webPageId -> a
    long webSiteId -> b
    java.lang.String name -> a
    java.lang.String displayName -> b
    java.lang.String description -> c
    java.lang.String contentType -> d
    java.lang.String template -> e
    boolean enabled -> a
    java.lang.String locale -> f
    java.util.Date creationDate -> a
    java.util.Date modifiedDate -> b
    60:71:void <init>() -> <init>
    77:79:void <init>(long) -> <init>
    85:85:long getWebPageId() -> getWebPageId
    92:93:void setWebPageId(long) -> setWebPageId
    99:99:long getWebSiteId() -> getWebSiteId
    107:107:java.util.Date getCreationDate() -> getCreationDate
    116:117:void setCreationDate(java.util.Date) -> setCreationDate
    124:124:java.util.Date getModifiedDate() -> getModifiedDate
    133:134:void setModifiedDate(java.util.Date) -> setModifiedDate
    141:142:void setWebSiteId(long) -> setWebSiteId
    148:148:java.lang.String getName() -> getName
    156:157:void setName(java.lang.String) -> setName
    163:163:java.lang.String getDisplayName() -> getDisplayName
    171:172:void setDisplayName(java.lang.String) -> setDisplayName
    178:178:java.lang.String getDescription() -> getDescription
    186:187:void setDescription(java.lang.String) -> setDescription
    193:193:java.lang.String getContentType() -> getContentType
    201:202:void setContentType(java.lang.String) -> setContentType
    208:208:java.lang.String getTemplate() -> getTemplate
    216:217:void setTemplate(java.lang.String) -> setTemplate
    223:223:boolean isEnabled() -> isEnabled
    231:232:void setEnabled(boolean) -> setEnabled
    238:238:java.lang.String getLocale() -> getLocale
    246:247:void setLocale(java.lang.String) -> setLocale
    250:250:int getCachedSize() -> getCachedSize
    262:262:java.io.Serializable getPrimaryKeyObject() -> getPrimaryKeyObject
    267:267:int getModelObjectType() -> getModelObjectType
    275:298:java.lang.String toString() -> toString
    303:304:void setProperties(java.util.Map) -> setProperties
    308:308:java.util.Map getProperties() -> getProperties
architecture.ee.web.site.support.WebSiteAware -> architecture.ee.web.site.support.WebSiteAware:
    void setWebSite(architecture.ee.web.site.WebSite) -> setWebSite
    architecture.ee.web.site.WebSite getWebSite() -> getWebSite
architecture.ee.web.spring.component.MultipartConfig -> architecture.ee.web.spring.component.MultipartConfig:
    org.apache.commons.logging.Log log -> a
    28:30:void <init>() -> <init>
    34:39:org.springframework.web.multipart.MultipartResolver multipartResolver() -> multipartResolver
architecture.ee.web.spring.component.WebComponentsConfig -> architecture.ee.web.spring.component.WebComponentsConfig:
    29:30:void <init>() -> <init>
    40:43:org.springframework.web.multipart.MultipartResolver multipartResolver() -> multipartResolver
    50:61:net.sf.ehcache.Ehcache monitoringCache() -> monitoringCache
    66:77:net.sf.ehcache.Ehcache imageCache() -> imageCache
    82:93:net.sf.ehcache.Ehcache imageLinkCache() -> imageLinkCache
    98:109:net.sf.ehcache.Ehcache imageLinkIdCache() -> imageLinkIdCache
    114:125:net.sf.ehcache.Ehcache attachmentCache() -> attachmentCache
    130:141:net.sf.ehcache.Ehcache menuCache() -> menuCache
    146:157:net.sf.ehcache.Ehcache menuIdCache() -> menuIdCache
architecture.ee.web.spring.config.FreeMarkerConfig -> architecture.ee.web.spring.config.FreeMarkerConfig:
    28:29:void <init>() -> <init>
    33:35:architecture.ee.web.view.freemarker.FreeMarkerConfigurer freemarkerConfig() -> freemarkerConfig
    1040:1044:void initializingBean(org.springframework.beans.factory.InitializingBean):40:44 -> freemarkerConfig
    1040:1044:architecture.ee.web.view.freemarker.FreeMarkerConfigurer freemarkerConfig():34 -> freemarkerConfig
architecture.ee.web.spring.controller.DownloadController -> architecture.ee.web.spring.controller.DownloadController:
    org.apache.commons.logging.Log log -> a
    architecture.ee.web.logo.LogoManager logoManager -> a
    architecture.ee.web.attachment.ImageManager imageManager -> a
    architecture.ee.web.attachment.AttachmentManager attachmentManager -> a
    architecture.common.user.UserManager userManager -> a
    architecture.common.user.CompanyManager companyManager -> a
    architecture.ee.web.site.WebSiteManager webSiteManager -> a
    58:58:void <init>() -> <init>
    90:90:architecture.common.user.CompanyManager getCompanyManager() -> getCompanyManager
    94:95:void setCompanyManager(architecture.common.user.CompanyManager) -> setCompanyManager
    98:98:architecture.ee.web.logo.LogoManager getLogoManager() -> getLogoManager
    102:103:void setLogoManager(architecture.ee.web.logo.LogoManager) -> setLogoManager
    109:109:architecture.ee.web.attachment.AttachmentManager getAttachmentManager() -> getAttachmentManager
    117:118:void setAttachmentManager(architecture.ee.web.attachment.AttachmentManager) -> setAttachmentManager
    124:124:architecture.ee.web.attachment.ImageManager getImageManager() -> getImageManager
    132:133:void setImageManager(architecture.ee.web.attachment.ImageManager) -> setImageManager
    136:136:architecture.common.user.UserManager getUserManager() -> getUserManager
    140:141:void setUserManager(architecture.common.user.UserManager) -> setUserManager
    144:144:architecture.ee.web.site.WebSiteManager getWebSiteManager() -> getWebSiteManager
    148:149:void setWebSiteManager(architecture.ee.web.site.WebSiteManager) -> setWebSiteManager
    158:164:void exportProxy(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) -> exportProxy
    178:213:void handleLogo(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse) -> handleLogo
    234:266:void downloadFile(java.lang.Long,java.lang.String,boolean,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse) -> downloadFile
    275:304:void donwloadImage(java.lang.Long,java.lang.String,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse) -> donwloadImage
    314:352:void handleFile(java.lang.Long,java.lang.String,boolean,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse) -> handleFile
    356:358:java.lang.String getEncodedFileName(architecture.ee.web.attachment.Attachment) -> getEncodedFileName
    364:371:boolean hasPermissions(architecture.ee.web.attachment.Image,architecture.common.user.User) -> a
    381:416:void handleImage(java.lang.Long,java.lang.String,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse) -> handleImage
    425:457:void handleImageByLink(java.lang.String,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse) -> handleImageByLink
    60:60:void <clinit>() -> <clinit>
architecture.ee.web.spring.controller.MyCloudDataController -> architecture.ee.web.spring.controller.MyCloudDataController:
    org.apache.commons.logging.Log log -> a
    architecture.ee.web.attachment.ImageManager imageManager -> a
    architecture.ee.web.attachment.AttachmentManager attachmentManager -> a
    architecture.common.user.UserManager userManager -> a
    82:878:void <init>() -> <init>
    103:103:architecture.common.user.UserManager getUserManager() -> getUserManager
    107:108:void setUserManager(architecture.common.user.UserManager) -> setUserManager
    114:114:architecture.ee.web.attachment.ImageManager getImageManager() -> getImageManager
    122:123:void setImageManager(architecture.ee.web.attachment.ImageManager) -> setImageManager
    129:129:architecture.ee.web.attachment.AttachmentManager getAttachmentManager() -> getAttachmentManager
    137:138:void setAttachmentManager(architecture.ee.web.attachment.AttachmentManager) -> setAttachmentManager
    144:152:architecture.ee.web.photo.album.Album saveOrupdateMyAlbum(architecture.ee.web.photo.album.DefaultAlbum,org.springframework.web.context.request.NativeWebRequest) -> saveOrupdateMyAlbum
    164:177:architecture.ee.web.model.ItemList getMyPhotoAlbumList(java.lang.Integer,java.lang.Integer,org.springframework.web.context.request.NativeWebRequest) -> getMyPhotoAlbumList
    188:189:architecture.ee.web.spring.controller.MyCloudDataController$ImageList getMyImageList(java.lang.Integer,java.lang.Integer,org.springframework.web.context.request.NativeWebRequest) -> getMyImageList
    200:232:java.util.List uploadMyImageWithMedia(java.lang.Long,org.springframework.web.multipart.MultipartHttpServletRequest) -> uploadMyImageWithMedia
    251:265:architecture.ee.web.attachment.Image uploadImageByUrl(architecture.ee.web.spring.controller.MyCloudDataController$UrlImageUpload,org.springframework.web.context.request.NativeWebRequest) -> uploadImageByUrl
    372:385:java.util.Map usage(org.springframework.web.context.request.NativeWebRequest) -> usage
    397:399:architecture.ee.web.spring.controller.MyCloudDataController$ImageList getImageList(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer,org.springframework.web.context.request.NativeWebRequest) -> getImageList
    406:423:architecture.ee.web.spring.controller.MyCloudDataController$ImageList getImageList(int,long,int,int,javax.servlet.http.HttpServletRequest) -> a
    465:474:boolean hasPermissions(architecture.ee.web.attachment.Image,architecture.common.user.User) -> a
    483:500:architecture.ee.web.spring.controller.MyCloudDataController$ImageDetails getImageDetails(java.lang.Long,org.springframework.web.context.request.NativeWebRequest) -> getImageDetails
    614:615:architecture.ee.web.attachment.Image getImage(java.lang.Long,org.springframework.web.context.request.NativeWebRequest) -> getImage
    626:663:java.util.List uploadImageWithMedia(java.lang.Integer,java.lang.Long,java.lang.Long,org.springframework.web.multipart.MultipartHttpServletRequest) -> uploadImageWithMedia
    669:671:architecture.ee.web.attachment.Image updateImage(architecture.ee.web.attachment.impl.ImageImpl,org.springframework.web.context.request.NativeWebRequest) -> updateImage
    677:679:architecture.ee.web.attachment.Image uploadImage(architecture.ee.web.attachment.impl.ImageImpl,org.springframework.web.context.request.NativeWebRequest) -> uploadImage
    686:691:architecture.ee.web.attachment.ImageLink getImageLink(java.lang.Long,org.springframework.web.context.request.NativeWebRequest) -> getImageLink
    699:702:java.util.List getImagePropertyList(java.lang.Long,org.springframework.web.context.request.NativeWebRequest) -> getImagePropertyList
    710:720:java.util.List updateImagePropertyList(java.lang.Long,java.util.List,org.springframework.web.context.request.NativeWebRequest) -> updateImagePropertyList
    728:741:java.util.List deleteImagePropertyList(java.lang.Long,java.util.List,org.springframework.web.context.request.NativeWebRequest) -> deleteImagePropertyList
    745:750:java.util.List toList(java.util.Map) -> toList
    754:758:void updateImageProperties(architecture.ee.web.attachment.Image,java.util.Map) -> updateImageProperties
    767:795:java.util.List uploadFiles(java.lang.Integer,java.lang.Long,org.springframework.web.multipart.MultipartHttpServletRequest) -> uploadFiles
    805:806:architecture.ee.web.spring.controller.MyCloudDataController$FileList getFileList(java.lang.Integer,java.lang.Integer,java.lang.Integer,org.springframework.web.context.request.NativeWebRequest) -> getFileList
    1811:1822:architecture.ee.web.spring.controller.MyCloudDataController$FileList getFileList$597c0de6(int,javax.servlet.http.HttpServletRequest):811:822 -> getFileList
    1811:1822:architecture.ee.web.spring.controller.MyCloudDataController$FileList getFileList(java.lang.Integer,java.lang.Integer,java.lang.Integer,org.springframework.web.context.request.NativeWebRequest):806 -> getFileList
    829:830:architecture.ee.web.attachment.Attachment getFile(java.lang.Long,org.springframework.web.context.request.NativeWebRequest) -> getFile
    838:842:java.util.List getFileProperty(java.lang.Long,org.springframework.web.context.request.NativeWebRequest) -> getFileProperty
    850:859:java.util.List updateFileProperty(java.lang.Long,java.util.List,org.springframework.web.context.request.NativeWebRequest) -> updateFileProperty
    867:875:java.util.List deleteFileProperty(java.lang.Long,java.util.List,org.springframework.web.context.request.NativeWebRequest) -> deleteFileProperty
architecture.ee.web.spring.controller.MyCloudDataController$ExifTag -> architecture.ee.web.spring.controller.MyCloudDataController$ExifTag:
    java.lang.String tagName -> a
    java.lang.String description -> b
    java.lang.String value -> c
    558:562:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    568:568:java.lang.String getTagName() -> getTagName
    576:577:void setTagName(java.lang.String) -> setTagName
    583:583:java.lang.String getDescription() -> getDescription
    591:592:void setDescription(java.lang.String) -> setDescription
    598:598:java.lang.String getValue() -> getValue
    606:607:void setValue(java.lang.String) -> setValue
architecture.ee.web.spring.controller.MyCloudDataController$FileList -> architecture.ee.web.spring.controller.MyCloudDataController$FileList:
    java.util.List files -> a
    int totalCount -> a
    878:878:void <init>() -> <init>
    887:887:java.util.List getFiles() -> getFiles
    895:896:void setFiles(java.util.List) -> setFiles
    902:902:int getTotalCount() -> getTotalCount
    910:911:void setTotalCount(int) -> setTotalCount
architecture.ee.web.spring.controller.MyCloudDataController$ImageDetails -> architecture.ee.web.spring.controller.MyCloudDataController$ImageDetails:
    architecture.ee.web.attachment.Image image -> a
    java.util.List exif -> a
    510:513:void <init>(architecture.ee.web.attachment.Image) -> <init>
    519:519:architecture.ee.web.attachment.Image getImage() -> getImage
    527:528:void setImage(architecture.ee.web.attachment.Image) -> setImage
    534:534:java.util.List getExif() -> getExif
    542:543:void setExif(java.util.List) -> setExif
architecture.ee.web.spring.controller.MyCloudDataController$ImageList -> architecture.ee.web.spring.controller.MyCloudDataController$ImageList:
    java.util.List images -> a
    int totalCount -> a
    427:427:void <init>() -> <init>
    436:436:java.util.List getImages() -> getImages
    444:445:void setImages(java.util.List) -> setImages
    451:451:int getTotalCount() -> getTotalCount
    459:460:void setTotalCount(int) -> setTotalCount
architecture.ee.web.spring.controller.MyCloudDataController$UrlImageUpload -> architecture.ee.web.spring.controller.MyCloudDataController$UrlImageUpload:
    org.apache.commons.logging.Log log -> a
    int objectType -> a
    java.net.URL sourceUrl -> a
    java.net.URL imageUrl -> b
    long objectId -> a
    java.lang.String contentType -> a
    269:279:void <init>() -> <init>
    285:286:void setObjectId(long) -> setObjectId
    289:289:long getObjectId() -> getObjectId
    296:296:java.net.URL getSourceUrl() -> getSourceUrl
    303:303:int getObjectType() -> getObjectType
    311:312:void setObjectType(int) -> setObjectType
    319:320:void setSourceUrl(java.net.URL) -> setSourceUrl
    326:326:java.net.URL getImageUrl() -> getImageUrl
    334:335:void setImageUrl(java.net.URL) -> setImageUrl
    338:352:java.lang.String getContentType() -> getContentType
    356:356:java.lang.String getFileName() -> getFileName
    360:363:java.io.File readFileFromUrl() -> readFileFromUrl
architecture.ee.web.spring.controller.SecureDownloadController -> architecture.ee.web.spring.controller.SecureDownloadController:
    org.apache.commons.logging.Log log -> a
    45:45:void <init>() -> <init>
    81:110:void handleLogo(java.lang.Long,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse) -> handleLogo
    47:47:void <clinit>() -> <clinit>
architecture.ee.web.spring.controller.SecureMoSKitoController -> architecture.ee.web.spring.controller.SecureMoSKitoController:
    org.apache.commons.logging.Log log -> a
    net.anotheria.moskito.core.registry.IProducerRegistryAPI producerRegistryAPI -> a
    87:88:void <init>() -> <init>
    95:120:java.util.List getLibraries(org.springframework.web.context.request.NativeWebRequest) -> getLibraries
    1124:1132:java.util.List getClassPathUrls(java.lang.String):124:132 -> getLibraries
    1124:1132:java.util.List getLibraries(org.springframework.web.context.request.NativeWebRequest):100 -> getLibraries
    136:168:java.util.List getClassPathUrlsForTomcat(java.lang.String,java.lang.String) -> a
    177:191:java.util.List getAlerts(org.springframework.web.context.request.NativeWebRequest) -> getAlerts
    199:216:java.util.List getThresholds(org.springframework.web.context.request.NativeWebRequest) -> getThresholds
    224:240:java.util.List getAccumulatorDefinitions(org.springframework.web.context.request.NativeWebRequest) -> getAccumulatorDefinitions
    249:262:architecture.ee.web.monitoring.moskito.AccumulatorDefinitionObject getAccumulatorDefinition(java.lang.String,org.springframework.web.context.request.NativeWebRequest) -> getAccumulatorDefinition
    271:274:architecture.ee.web.monitoring.moskito.AccumulatedSingleGraphObject getAccumulatorGraphData(java.lang.String,org.springframework.web.context.request.NativeWebRequest) -> getAccumulatorGraphData
    283:292:java.util.List getAccumulatorGraphDataOnly(java.lang.String,org.springframework.web.context.request.NativeWebRequest) -> getAccumulatorGraphDataOnly
    307:321:java.util.List getProducers(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,java.lang.String,org.springframework.web.context.request.NativeWebRequest) -> getProducers
    334:335:architecture.ee.web.monitoring.moskito.ProducerObject getProducer(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.springframework.web.context.request.NativeWebRequest) -> getProducer
    345:346:architecture.ee.web.monitoring.moskito.ProducerObject getRuntimeStats(java.lang.String,java.lang.String,org.springframework.web.context.request.NativeWebRequest) -> getRuntimeStats
    355:356:architecture.ee.web.monitoring.moskito.ProducerObject getOSStats(java.lang.String,java.lang.String,org.springframework.web.context.request.NativeWebRequest) -> getOSStats
    367:378:java.util.List getBuiltInMemoryStats(java.lang.String,java.lang.String,java.lang.String,org.springframework.web.context.request.NativeWebRequest) -> getBuiltInMemoryStats
    388:400:java.util.List getSessionStats(java.lang.String,java.lang.String,org.springframework.web.context.request.NativeWebRequest) -> getSessionStats
    404:424:architecture.ee.web.monitoring.moskito.ProducerObject convertStatsProducerToPO(net.anotheria.moskito.core.producers.IStatsProducer,java.lang.String,net.anotheria.moskito.core.stats.TimeUnit,boolean,boolean) -> convertStatsProducerToPO
    430:471:java.util.List getStatValues(net.anotheria.moskito.core.producers.IStats,java.lang.String,net.anotheria.moskito.core.stats.TimeUnit) -> getStatValues
    476:482:architecture.ee.web.monitoring.moskito.LongValue getLongStatValue(net.anotheria.moskito.core.producers.IStats,java.lang.String,java.lang.String,net.anotheria.moskito.core.stats.TimeUnit) -> getLongStatValue
    486:486:net.anotheria.moskito.core.registry.IProducerRegistry getIProducerRegistry() -> getIProducerRegistry
    82:82:org.apache.commons.logging.Log access$000() -> a
    84:85:void <clinit>() -> <clinit>
architecture.ee.web.spring.controller.SecureMoSKitoController$1 -> architecture.ee.web.spring.controller.SecureMoSKitoController$1:
    java.lang.String val$contextPropertyName -> a
    java.lang.String val$context -> b
    138:138:void <init>(java.lang.String,java.lang.String) -> <init>
    145:153:boolean apply(javax.management.ObjectName) -> apply
    157:157:void setMBeanServer(javax.management.MBeanServer) -> setMBeanServer
architecture.ee.web.spring.controller.SecureMoSKitoController$2 -> architecture.ee.web.spring.controller.SecureMoSKitoController$2:
    java.lang.String val$className -> a
    367:367:void <init>(java.lang.String) -> <init>
    369:372:boolean doesFit(net.anotheria.moskito.core.producers.IStatsProducer) -> doesFit
architecture.ee.web.spring.controller.SecureMoSKitoController$3 -> architecture.ee.web.spring.controller.SecureMoSKitoController$3:
    388:388:void <init>() -> <init>
    391:394:boolean doesFit(net.anotheria.moskito.core.producers.IStatsProducer) -> doesFit
architecture.ee.web.spring.controller.SecureWebMgmtDataController -> architecture.ee.web.spring.controller.SecureWebMgmtDataController:
    org.apache.commons.logging.Log log -> a
    141:142:void <init>() -> <init>
    154:162:architecture.ee.web.model.ItemList getCompanyWebSiteList(java.lang.Long,org.springframework.web.context.request.NativeWebRequest) -> getCompanyWebSiteList
    170:202:architecture.ee.web.ws.Result updateWebSite(architecture.ee.web.site.DefaultWebSite,org.springframework.web.context.request.NativeWebRequest) -> updateWebSite
    211:221:architecture.ee.web.site.WebSite getWebSite(java.lang.Long,boolean,org.springframework.web.context.request.NativeWebRequest) -> getWebSite
    230:246:architecture.ee.web.ws.Result updateWebSiteMenu(architecture.ee.web.site.DefaultWebSite,boolean,org.springframework.web.context.request.NativeWebRequest) -> updateWebSiteMenu
    259:319:java.util.List getMenuItemList(java.lang.Long,java.lang.String,java.lang.String,boolean) -> getMenuItemList
    328:330:java.util.List getCompanyPropertyList(java.lang.Long,org.springframework.web.context.request.NativeWebRequest) -> getCompanyPropertyList
    339:348:architecture.ee.web.ws.Result updateCompanyPropertyList(architecture.ee.web.ws.StringProperty[],java.lang.Long,org.springframework.web.context.request.NativeWebRequest) -> updateCompanyPropertyList
    357:367:architecture.ee.web.ws.Result deleteCompanyPropertyList(architecture.ee.web.ws.StringProperty[],java.lang.Long,org.springframework.web.context.request.NativeWebRequest) -> deleteCompanyPropertyList
    389:410:architecture.ee.web.model.ItemList getWebsitePageList(architecture.ee.web.model.DataSourceRequest) -> getWebsitePageList
    417:450:architecture.ee.web.ws.Result updateWebsitePage(architecture.ee.web.site.page.WebPage,org.springframework.web.context.request.NativeWebRequest) -> updateWebsitePage
    460:462:java.util.List getWebsitePagePropertyList(java.lang.Long,org.springframework.web.context.request.NativeWebRequest) -> getWebsitePagePropertyList
    471:480:architecture.ee.web.ws.Result updateWebsitePagePropertyList(architecture.ee.web.ws.StringProperty[],java.lang.Long,org.springframework.web.context.request.NativeWebRequest) -> updateWebsitePagePropertyList
    489:499:architecture.ee.web.ws.Result deleteWebsitePagePropertyList(architecture.ee.web.ws.StringProperty[],java.lang.Long,org.springframework.web.context.request.NativeWebRequest) -> deleteWebsitePagePropertyList
    516:517:architecture.ee.web.model.ItemList getMenuList(org.springframework.web.context.request.NativeWebRequest) -> getMenuList
    523:531:architecture.ee.web.navigator.Menu updateMenu(architecture.ee.web.navigator.DefaultMenu,org.springframework.web.context.request.NativeWebRequest) -> updateMenu
    540:542:java.util.List getMenuPropertyList(java.lang.Long,org.springframework.web.context.request.NativeWebRequest) -> getMenuPropertyList
    552:561:architecture.ee.web.ws.Result updateMenuPropertyList(architecture.ee.web.ws.StringProperty[],java.lang.Long,org.springframework.web.context.request.NativeWebRequest) -> updateMenuPropertyList
    571:581:architecture.ee.web.ws.Result deleteMenuPropertyList(architecture.ee.web.ws.StringProperty[],java.lang.Long,org.springframework.web.context.request.NativeWebRequest) -> deleteMenuPropertyList
    594:595:architecture.ee.web.model.ItemList getLogoImageList(java.lang.Integer,java.lang.Long,org.springframework.web.context.request.NativeWebRequest) -> getLogoImageList
    602:606:architecture.ee.web.ws.Result setPrimaryLogoImage(java.lang.Long,org.springframework.web.context.request.NativeWebRequest) -> setPrimaryLogoImage
    616:645:architecture.ee.web.ws.Result uploadLogoImage(java.lang.Integer,java.lang.Long,org.springframework.web.multipart.MultipartHttpServletRequest) -> uploadLogoImage
    660:684:java.util.List getTemplateList(java.lang.Long,java.lang.String,boolean,org.springframework.web.context.request.NativeWebRequest) -> getTemplateList
    695:705:architecture.ee.web.spring.controller.SecureWebMgmtDataController$FileInfo getTemplateContent(java.lang.Long,java.lang.String,boolean,org.springframework.web.context.request.NativeWebRequest) -> getTemplateContent
    710:716:java.lang.String getTemplateFileContent(java.lang.String,boolean) -> getTemplateFileContent
    720:723:java.lang.String getTemplateSrouceLocation(boolean) -> getTemplateSrouceLocation
    728:728:boolean isTemplateCustomizedEnabled() -> isTemplateCustomizedEnabled
    738:738:architecture.common.license.License getLicenseInfo(org.springframework.web.context.request.NativeWebRequest) -> getLicenseInfo
    744:753:java.util.List getSetupProperties(org.springframework.web.context.request.NativeWebRequest) -> getSetupProperties
    759:768:java.util.List getApplicationProperties(org.springframework.web.context.request.NativeWebRequest) -> getApplicationProperties
    775:779:architecture.ee.web.ws.Result updateApplicationProperties(architecture.ee.web.ws.Property[],org.springframework.web.context.request.NativeWebRequest) -> updateApplicationProperties
    786:790:architecture.ee.web.ws.Result deleteApplicationProperties(architecture.ee.web.ws.Property[],org.springframework.web.context.request.NativeWebRequest) -> deleteApplicationProperties
    801:804:architecture.ee.web.spring.controller.SecureWebStatsDataController$CacheStats refreshCache(java.lang.String,org.springframework.web.context.request.NativeWebRequest) -> refreshCache
    815:831:java.util.List getSqlList(java.lang.String,org.springframework.web.context.request.NativeWebRequest) -> getSqlList
    838:841:architecture.ee.web.spring.controller.SecureWebMgmtDataController$FileInfo getSql(java.lang.String,org.springframework.web.context.request.NativeWebRequest) -> getSql
    845:845:org.springframework.core.io.Resource fileToResource(java.io.File) -> fileToResource
    849:849:java.io.File getRootSqlFile() -> getRootSqlFile
    853:857:boolean isSqlCustomizedEnabled() -> isSqlCustomizedEnabled
    1034:1039:java.util.List toPropertyList(java.util.Map) -> toPropertyList
    104:104:void <clinit>() -> <clinit>
architecture.ee.web.spring.controller.SecureWebMgmtDataController$FileInfo -> architecture.ee.web.spring.controller.SecureWebMgmtDataController$FileInfo:
    boolean customized -> a
    boolean directory -> b
    java.lang.String path -> a
    java.lang.String absolutePath -> b
    java.lang.String name -> c
    long size -> a
    java.util.Date lastModifiedDate -> a
    java.lang.String fileContent -> d
    875:887:void <init>(java.io.File) -> <init>
    889:902:void <init>(java.io.File,java.io.File) -> <init>
    905:907:void <init>(java.io.File,java.io.File,boolean) -> <init>
    913:913:java.lang.String getFileContent() -> getFileContent
    921:922:void setFileContent(java.lang.String) -> setFileContent
    928:928:boolean isCustomized() -> isCustomized
    936:937:void setCustomized(boolean) -> setCustomized
    943:943:boolean isDirectory() -> isDirectory
    951:952:void setDirectory(boolean) -> setDirectory
    958:958:java.lang.String getPath() -> getPath
    966:967:void setPath(java.lang.String) -> setPath
    973:973:java.lang.String getAbsolutePath() -> getAbsolutePath
    981:982:void setAbsolutePath(java.lang.String) -> setAbsolutePath
    988:988:java.lang.String getName() -> getName
    996:997:void setName(java.lang.String) -> setName
    1003:1003:long getSize() -> getSize
    1011:1012:void setSize(long) -> setSize
    1019:1019:java.util.Date getLastModifiedDate() -> getLastModifiedDate
    1028:1029:void setLastModifiedDate(java.util.Date) -> setLastModifiedDate
architecture.ee.web.spring.controller.SecureWebStatsDataController -> architecture.ee.web.spring.controller.SecureWebStatsDataController:
    architecture.ee.web.spring.controller.SecureWebStatsDataController$SchemaBrowserTask schemaBrowserTask -> a
    108:109:void <init>() -> <init>
    117:123:architecture.common.lifecycle.SystemInfo getSystemInfo(org.springframework.web.context.request.NativeWebRequest) -> getSystemInfo
    129:129:architecture.common.lifecycle.MemoryInfo getMemoryInfo(org.springframework.web.context.request.NativeWebRequest) -> getMemoryInfo
    135:135:java.util.List getDiskUsages(org.springframework.web.context.request.NativeWebRequest) -> getDiskUsages
    141:141:java.util.List getDatabaseConnections(org.springframework.web.context.request.NativeWebRequest) -> getDatabaseConnections
    147:147:java.util.List getDatabaseInfos(org.springframework.web.context.request.NativeWebRequest) -> getDatabaseInfos
    157:171:architecture.ee.web.spring.controller.SecureWebStatsDataController$SchemaInfo getDatabaseSchema(org.springframework.web.context.request.NativeWebRequest) -> getDatabaseSchema
    179:182:architecture.common.jdbc.schema.Table getDatabaseTable(java.lang.String,org.springframework.web.context.request.NativeWebRequest) -> getDatabaseTable
    190:195:java.util.List listCacheStats(org.springframework.web.context.request.NativeWebRequest) -> listCacheStats
    201:202:architecture.ee.web.spring.controller.SecureWebStatsDataController$CacheStats getCacheStats(java.lang.String,org.springframework.web.context.request.NativeWebRequest) -> getCacheStats
    71:151:void <clinit>() -> <clinit>
architecture.ee.web.spring.controller.SecureWebStatsDataController$CacheStats -> architecture.ee.web.spring.controller.SecureWebStatsDataController$CacheStats:
    java.lang.String cacheName -> a
    int statisticsAccuracy -> a
    long cacheHits -> a
    long onDiskHits -> b
    long offHeapHits -> c
    long inMemoryHits -> d
    long misses -> e
    long onDiskMisses -> f
    long offHeapMisses -> g
    long inMemoryMisses -> h
    long size -> i
    long memoryStoreSize -> j
    long offHeapStoreSize -> k
    long diskStoreSize -> l
    float averageGetTime -> a
    long evictionCount -> m
    long searchesPerSecond -> n
    long averageSearchTime -> o
    long writerQueueLength -> p
    long maxEntriesLocalHeap -> q
    long maxEntriesLocalDisk -> r
    boolean diskPersistent -> a
    442:472:void <init>(java.lang.String,int,long,long,long,long,long,long,long,long,long,float,long,long,long,long,long,long,long) -> <init>
    442:497:void <init>(net.sf.ehcache.Cache) -> <init>
    503:503:boolean isDiskPersistent() -> isDiskPersistent
    510:511:void setDiskPersistent(boolean) -> setDiskPersistent
    517:517:long getMaxEntriesLocalHeap() -> getMaxEntriesLocalHeap
    524:525:void setMaxEntriesLocalHeap(long) -> setMaxEntriesLocalHeap
    531:531:long getMaxEntriesLocalDisk() -> getMaxEntriesLocalDisk
    538:539:void setMaxEntriesLocalDisk(long) -> setMaxEntriesLocalDisk
    545:545:long getWriterQueueLength() -> getWriterQueueLength
    552:553:void setWriterQueueLength(long) -> setWriterQueueLength
    559:559:java.lang.String getCacheName() -> getCacheName
    566:566:int getStatisticsAccuracy() -> getStatisticsAccuracy
    573:573:long getCacheHits() -> getCacheHits
    580:580:long getOnDiskHits() -> getOnDiskHits
    587:587:long getOffHeapHits() -> getOffHeapHits
    594:594:long getInMemoryHits() -> getInMemoryHits
    601:601:long getMisses() -> getMisses
    608:608:long getOnDiskMisses() -> getOnDiskMisses
    615:615:long getOffHeapMisses() -> getOffHeapMisses
    622:622:long getInMemoryMisses() -> getInMemoryMisses
    629:629:long getSize() -> getSize
    636:636:long getMemoryStoreSize() -> getMemoryStoreSize
    643:643:long getOffHeapStoreSize() -> getOffHeapStoreSize
    650:650:long getDiskStoreSize() -> getDiskStoreSize
    657:657:float getAverageGetTime() -> getAverageGetTime
    664:664:long getEvictionCount() -> getEvictionCount
    671:671:long getSearchesPerSecond() -> getSearchesPerSecond
    678:678:long getAverageSearchTime() -> getAverageSearchTime
architecture.ee.web.spring.controller.SecureWebStatsDataController$SchemaBrowserTask -> architecture.ee.web.spring.controller.SecureWebStatsDataController$SchemaBrowserTask:
    java.util.concurrent.atomic.AtomicInteger status -> a
    java.lang.String catalogFilter -> a
    java.lang.String schemaFilter -> b
    javax.sql.DataSource dataSource -> a
    architecture.common.jdbc.schema.Database database -> a
    281:292:void <init>() -> <init>
    295:295:int getStatusCode() -> getStatusCode
    352:418:void run() -> run
    279:279:java.lang.String access$002(architecture.ee.web.spring.controller.SecureWebStatsDataController$SchemaBrowserTask,java.lang.String) -> a
    279:279:java.lang.String access$102(architecture.ee.web.spring.controller.SecureWebStatsDataController$SchemaBrowserTask,java.lang.String) -> b
    279:279:javax.sql.DataSource access$202(architecture.ee.web.spring.controller.SecureWebStatsDataController$SchemaBrowserTask,javax.sql.DataSource) -> a
    279:279:architecture.common.jdbc.schema.Database access$500(architecture.ee.web.spring.controller.SecureWebStatsDataController$SchemaBrowserTask) -> a
architecture.ee.web.spring.controller.SecureWebStatsDataController$SchemaInfo -> architecture.ee.web.spring.controller.SecureWebStatsDataController$SchemaInfo:
    java.lang.String schema -> a
    java.lang.String catalog -> b
    java.util.List tables -> a
    int status -> a
    218:223:void <init>() -> <init>
    228:228:java.lang.String getSchema() -> getSchema
    234:235:void setSchema(java.lang.String) -> setSchema
    240:240:java.lang.String getCatalog() -> getCatalog
    246:247:void setCatalog(java.lang.String) -> setCatalog
    252:252:java.util.List getTables() -> getTables
    258:259:void setTables(java.util.List) -> setTables
    262:263:void addTable(java.lang.String) -> addTable
    268:268:int getStatus() -> getStatus
    274:275:void setStatus(int) -> setStatus
    208:208:int access$302(architecture.ee.web.spring.controller.SecureWebStatsDataController$SchemaInfo,int) -> a
    208:208:int access$300(architecture.ee.web.spring.controller.SecureWebStatsDataController$SchemaInfo) -> a
    208:208:java.lang.String access$402(architecture.ee.web.spring.controller.SecureWebStatsDataController$SchemaInfo,java.lang.String) -> a
    208:208:java.lang.String access$602(architecture.ee.web.spring.controller.SecureWebStatsDataController$SchemaInfo,java.lang.String) -> b
architecture.ee.web.template.DefaultTemplateManager -> architecture.ee.web.template.DefaultTemplateManager:
    architecture.common.user.UserManager userManager -> a
    architecture.ee.web.template.dao.TemplateDao templateDao -> a
    30:30:void <init>() -> <init>
    40:40:architecture.ee.web.template.dao.TemplateDao getTemplateDao() -> getTemplateDao
    47:48:void setTemplateDao(architecture.ee.web.template.dao.TemplateDao) -> setTemplateDao
    54:54:architecture.common.user.UserManager getUserManager() -> getUserManager
    61:62:void setUserManager(architecture.common.user.UserManager) -> setUserManager
    65:67:java.util.List getTemplate(architecture.common.user.Company) -> getTemplate
    71:72:java.util.List getTemplate(architecture.common.user.User) -> getTemplate
    76:83:java.util.List getTemplate(int,long) -> getTemplate
    88:95:java.util.List getTemplate(int,long,int,int) -> getTemplate
    99:99:int getTemplateCount(int,long) -> getTemplateCount
    103:122:architecture.ee.web.template.Template getTemplate(long) -> getTemplate
    126:126:architecture.ee.web.template.Template getTemplateById(long) -> getTemplateById
architecture.ee.web.template.Template -> architecture.ee.web.template.Template:
    long getTemplateId() -> getTemplateId
    void setTemplateId(long) -> setTemplateId
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTemplateType() -> getTemplateType
    void setTemplateType(java.lang.String) -> setTemplateType
    java.util.List getAttachments() -> getAttachments
    architecture.common.user.User getCreator() -> getCreator
    void setCreator(architecture.common.user.User) -> setCreator
    architecture.common.user.User getModifier() -> getModifier
    void setModifier(architecture.common.user.User) -> setModifier
    java.lang.String getBody() -> getBody
    void setBody(java.lang.String) -> setBody
    long getObjectId() -> getObjectId
    int getObjectType() -> getObjectType
    void setObjectId(long) -> setObjectId
    void setObjectType(int) -> setObjectType
    void setLocation(java.lang.String) -> setLocation
    java.lang.String getLocation() -> getLocation
architecture.ee.web.template.TemplateManager -> architecture.ee.web.template.TemplateManager:
    java.util.List getTemplate(architecture.common.user.Company) -> getTemplate
    java.util.List getTemplate(architecture.common.user.User) -> getTemplate
    java.util.List getTemplate(int,long) -> getTemplate
    java.util.List getTemplate(int,long,int,int) -> getTemplate
    int getTemplateCount(int,long) -> getTemplateCount
    architecture.ee.web.template.Template getTemplate(long) -> getTemplate
architecture.ee.web.template.dao.TemplateDao -> architecture.ee.web.template.dao.TemplateDao:
    architecture.ee.web.template.Template createTemplate(architecture.ee.web.template.Template) -> createTemplate
    void deleteTemplate(architecture.ee.web.template.Template) -> deleteTemplate
    void updateTemplate(architecture.ee.web.template.Template) -> updateTemplate
    architecture.ee.web.template.Template getTemplate(long) -> getTemplate
    java.util.List getTemplateIds(int,long) -> getTemplateIds
    java.util.List getTemplateIds(int,long,int,int) -> getTemplateIds
    int getTemplateCount(int,long) -> getTemplateCount
architecture.ee.web.template.dao.jdbc.JdbcTemplateDao -> architecture.ee.web.template.dao.jdbc.JdbcTemplateDao:
    org.springframework.jdbc.core.RowMapper templateMapper -> a
    architecture.ee.jdbc.property.dao.ExtendedPropertyDao extendedPropertyDao -> a
    java.lang.String sequencerName -> a
    java.lang.String templatePropertyTableName -> b
    java.lang.String templatePropertyPrimaryColumnName -> c
    37:59:void <init>() -> <init>
    64:64:architecture.ee.jdbc.property.dao.ExtendedPropertyDao getExtendedPropertyDao() -> getExtendedPropertyDao
    70:71:void setExtendedPropertyDao(architecture.ee.jdbc.property.dao.ExtendedPropertyDao) -> setExtendedPropertyDao
    76:76:java.lang.String getSequencerName() -> getSequencerName
    82:83:void setSequencerName(java.lang.String) -> setSequencerName
    88:88:java.lang.String getTemplatePropertyTableName() -> getTemplatePropertyTableName
    94:95:void setTemplatePropertyTableName(java.lang.String) -> setTemplatePropertyTableName
    100:100:java.lang.String getTemplatePropertyPrimaryColumnName() -> getTemplatePropertyPrimaryColumnName
    107:108:void setTemplatePropertyPrimaryColumnName(java.lang.String) -> setTemplatePropertyPrimaryColumnName
    112:112:java.util.Map getTemplateProperties(long) -> getTemplateProperties
    116:117:void deleteTemplateProperties(long) -> deleteTemplateProperties
    120:121:void setTemplateProperties(long,java.util.Map) -> setTemplateProperties
    124:144:architecture.ee.web.template.Template createTemplate(architecture.ee.web.template.Template) -> createTemplate
    147:150:void deleteTemplate(architecture.ee.web.template.Template) -> deleteTemplate
    152:164:void updateTemplate(architecture.ee.web.template.Template) -> updateTemplate
    166:183:architecture.ee.web.template.Template getTemplate(long) -> getTemplate
    187:187:java.util.List getTemplateIds(int,long) -> getTemplateIds
    198:198:java.util.List getTemplateIds(int,long,int,int) -> getTemplateIds
    207:207:int getTemplateCount(int,long) -> getTemplateCount
    214:215:void removeTemplateBody(architecture.ee.web.template.Template) -> removeTemplateBody
    218:222:void saveTemplateBody(architecture.ee.web.template.Template) -> saveTemplateBody
    225:225:java.lang.String getTemplateBody(architecture.ee.web.template.Template) -> getTemplateBody
architecture.ee.web.template.dao.jdbc.JdbcTemplateDao$1 -> architecture.ee.web.template.dao.jdbc.JdbcTemplateDao$1:
    39:39:void <init>() -> <init>
    39:39:java.lang.Object mapRow(java.sql.ResultSet,int) -> mapRow
    1041:1052:architecture.ee.web.template.impl.DefaultTemplate mapRow$1a87b82c(java.sql.ResultSet):41:52 -> mapRow
    1041:1052:java.lang.Object mapRow(java.sql.ResultSet,int):39 -> mapRow
architecture.ee.web.template.dao.jdbc.JdbcTemplateDao$2 -> architecture.ee.web.template.dao.jdbc.JdbcTemplateDao$2:
    189:189:void <init>() -> <init>
    189:189:java.lang.Object mapRow(java.sql.ResultSet,int) -> mapRow
    1191:1191:java.lang.Long mapRow$4abb7c41(java.sql.ResultSet):191:191 -> mapRow
    1191:1191:java.lang.Object mapRow(java.sql.ResultSet,int):189 -> mapRow
architecture.ee.web.template.impl.DefaultTemplate -> architecture.ee.web.template.impl.DefaultTemplate:
    long templateId -> a
    java.lang.String title -> a
    java.lang.String templateType -> b
    java.util.List attachments -> a
    architecture.common.user.User creator -> a
    architecture.common.user.User modifier -> b
    java.lang.String body -> c
    int objectType -> a
    long objectId -> b
    java.lang.String location -> d
    28:28:void <init>() -> <init>
    55:55:java.lang.String getLocation() -> getLocation
    62:63:void setLocation(java.lang.String) -> setLocation
    69:69:long getTemplateId() -> getTemplateId
    76:77:void setTemplateId(long) -> setTemplateId
    83:83:java.lang.String getTitle() -> getTitle
    90:91:void setTitle(java.lang.String) -> setTitle
    97:97:java.lang.String getTemplateType() -> getTemplateType
    104:105:void setTemplateType(java.lang.String) -> setTemplateType
    111:111:java.util.List getAttachments() -> getAttachments
    118:119:void setAttachments(java.util.List) -> setAttachments
    125:125:architecture.common.user.User getCreator() -> getCreator
    132:133:void setCreator(architecture.common.user.User) -> setCreator
    139:139:architecture.common.user.User getModifier() -> getModifier
    146:147:void setModifier(architecture.common.user.User) -> setModifier
    153:153:java.lang.String getBody() -> getBody
    160:161:void setBody(java.lang.String) -> setBody
    167:167:int getObjectType() -> getObjectType
    174:175:void setObjectType(int) -> setObjectType
    181:181:long getObjectId() -> getObjectId
    188:189:void setObjectId(long) -> setObjectId
    192:192:java.io.Serializable getPrimaryKeyObject() -> getPrimaryKeyObject
    196:196:int getModelObjectType() -> getModelObjectType
    200:210:int getCachedSize() -> getCachedSize
architecture.ee.web.util.CookieUtils -> architecture.ee.web.util.CookieUtils:
    org.apache.commons.logging.Log log -> a
    31:32:void <init>() -> <init>
    36:60:javax.servlet.http.Cookie getCookie(javax.servlet.http.HttpServletRequest,java.lang.String) -> getCookie
    65:75:void deleteCookie(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.Cookie) -> deleteCookie
    79:80:void setCookie(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String) -> setCookie
    84:93:void setCookie(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,int) -> setCookie
    28:28:void <clinit>() -> <clinit>
architecture.ee.web.util.HtmlUtils -> architecture.ee.web.util.HtmlUtils:
    com.fasterxml.jackson.databind.ObjectMapper mapper -> a
    23:23:void <init>() -> <init>
    29:36:java.lang.String getStackTrace(java.lang.Throwable) -> getStackTrace
    42:42:java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    47:49:java.lang.String objectToJson(java.lang.Object) -> objectToJson
    25:25:void <clinit>() -> <clinit>
architecture.ee.web.util.LocaleUtils -> architecture.ee.web.util.LocaleUtils:
    30:30:void <init>() -> <init>
    34:34:java.util.Locale getUserLocale(javax.servlet.http.HttpServletRequest,architecture.common.user.User) -> getUserLocale
    39:50:java.util.Locale getUserLocale(javax.servlet.http.HttpServletRequest,architecture.common.user.User,boolean) -> getUserLocale
    55:83:java.util.Locale getLocaleFromRequestHeader(javax.servlet.http.HttpServletRequest) -> getLocaleFromRequestHeader
    89:93:java.lang.String getLocalizedString(java.lang.String) -> getLocalizedString
    98:101:java.lang.String getLocalizedString(java.lang.String,java.util.Locale) -> getLocalizedString
    106:106:java.lang.String getLocalizedString(java.lang.String,java.util.List) -> getLocalizedString
    112:123:java.lang.String getLocalizedString(java.lang.String,java.util.Locale,java.util.List) -> getLocalizedString
    129:129:java.lang.String getLocalizedNumber(long) -> getLocalizedNumber
    134:134:java.lang.String getLocalizedNumber(long,java.util.Locale) -> getLocalizedNumber
    139:139:java.lang.String getLocalizedNumber(double) -> getLocalizedNumber
    144:144:java.lang.String getLocalizedNumber(double,java.util.Locale) -> getLocalizedNumber
architecture.ee.web.util.ModelMap -> architecture.ee.web.util.ModelMap:
    long serialVersionUID -> serialVersionUID
    36:37:void <init>() -> <init>
    44:46:void <init>(java.lang.String,java.lang.Object) -> <init>
    54:56:void <init>(java.lang.Object) -> <init>
    65:67:architecture.ee.web.util.ModelMap addAttribute(java.lang.String,java.lang.Object) -> addAttribute
    80:84:architecture.ee.web.util.ModelMap addAttribute(java.lang.Object) -> addAttribute
    93:98:architecture.ee.web.util.ModelMap addAllAttributes(java.util.Collection) -> addAllAttributes
    106:109:architecture.ee.web.util.ModelMap addAllAttributes(java.util.Map) -> addAllAttributes
    118:125:architecture.ee.web.util.ModelMap mergeAttributes(java.util.Map) -> mergeAttributes
    134:134:boolean containsAttribute(java.lang.String) -> containsAttribute
    143:143:architecture.ee.web.util.ModelMap addObject(java.lang.String,java.lang.Object) -> addObject
    151:151:architecture.ee.web.util.ModelMap addObject(java.lang.Object) -> addObject
    159:159:architecture.ee.web.util.ModelMap addAllObjects(java.util.Collection) -> addAllObjects
    167:167:architecture.ee.web.util.ModelMap addAllObjects(java.util.Map) -> addAllObjects
architecture.ee.web.util.ParamUtils -> architecture.ee.web.util.ParamUtils:
    org.apache.commons.logging.Log log -> a
    36:37:void <init>() -> <init>
    40:40:java.util.Map getParametersAsMap(javax.servlet.http.HttpServletRequest) -> getParametersAsMap
    51:55:java.util.Map getJsonParameter(javax.servlet.http.HttpServletRequest,java.lang.String) -> getJsonParameter
    61:73:java.lang.Object getJsonParameter(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.Class) -> getJsonParameter
    79:88:java.lang.Object getJsonParameter(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,java.lang.Class) -> getJsonParameter
    94:94:java.lang.String getParameter(javax.servlet.http.HttpServletRequest,java.lang.String) -> getParameter
    99:99:java.lang.String getParameter(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String) -> getParameter
    104:104:java.lang.String getParameter(javax.servlet.http.HttpServletRequest,java.lang.String,boolean) -> getParameter
    109:118:java.lang.String getParameter(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,boolean) -> getParameter
    124:124:java.lang.String[] getParameters(javax.servlet.http.HttpServletRequest,java.lang.String) -> getParameters
    129:141:java.lang.String[] getParameters(javax.servlet.http.HttpServletRequest,java.lang.String,boolean) -> getParameters
    146:146:boolean getBooleanParameter(javax.servlet.http.HttpServletRequest,java.lang.String) -> getBooleanParameter
    151:157:boolean getBooleanParameter(javax.servlet.http.HttpServletRequest,java.lang.String,boolean) -> getBooleanParameter
    162:174:int getIntParameter(javax.servlet.http.HttpServletRequest,java.lang.String,int) -> getIntParameter
    180:194:int[] getIntParameters(javax.servlet.http.HttpServletRequest,java.lang.String,int) -> getIntParameters
    199:211:double getDoubleParameter(javax.servlet.http.HttpServletRequest,java.lang.String,double) -> getDoubleParameter
    217:229:long getLongParameter(javax.servlet.http.HttpServletRequest,java.lang.String,long) -> getLongParameter
    235:249:long[] getLongParameters(javax.servlet.http.HttpServletRequest,java.lang.String,long) -> getLongParameters
    254:254:java.lang.String getAttribute(javax.servlet.http.HttpServletRequest,java.lang.String) -> getAttribute
    259:268:java.lang.String getAttribute(javax.servlet.http.HttpServletRequest,java.lang.String,boolean) -> getAttribute
    274:275:boolean getBooleanAttribute(javax.servlet.http.HttpServletRequest,java.lang.String) -> getBooleanAttribute
    280:292:int getIntAttribute(javax.servlet.http.HttpServletRequest,java.lang.String,int) -> getIntAttribute
    298:310:long getLongAttribute(javax.servlet.http.HttpServletRequest,java.lang.String,long) -> getLongAttribute
    321:334:void printParameter(javax.servlet.http.HttpServletRequest,org.apache.commons.logging.Log) -> printParameter
    33:33:void <clinit>() -> <clinit>
architecture.ee.web.util.PatternLayoutWithStackTrace -> architecture.ee.web.util.PatternLayoutWithStackTrace:
    35:36:void <init>() -> <init>
    40:40:boolean ignoresThrowable() -> ignoresThrowable
    45:53:java.lang.String format(org.apache.log4j.spi.LoggingEvent) -> format
    62:80:void appendStackTrace(java.lang.StringBuffer,java.lang.Throwable) -> appendStackTrace
    84:102:java.lang.Throwable getNonCauseUnderlying(java.lang.Throwable) -> getNonCauseUnderlying
architecture.ee.web.util.PlainTextToHtmlConverter -> architecture.ee.web.util.PlainTextToHtmlConverter:
    java.util.regex.Pattern INLINE_SPACES_TO_REPLACE -> a
    35:36:void <init>() -> <init>
    39:48:java.lang.String toHtml(java.lang.String) -> toHtml
    54:93:java.lang.String encodeHtmlEntities(java.lang.String) -> encodeHtmlEntities
    1098:1098:int expectedEncodedLength(int):98:98 -> encodeHtmlEntities
    1098:1098:java.lang.String encodeHtmlEntities(java.lang.String):56 -> encodeHtmlEntities
    103:117:java.lang.String matchAndReplaceSpaces(java.lang.String) -> matchAndReplaceSpaces
    32:32:void <clinit>() -> <clinit>
architecture.ee.web.util.ServletUtils -> architecture.ee.web.util.ServletUtils:
    java.lang.String CONTEXT_ROOT_PATH -> CONTEXT_ROOT_PATH
    34:34:void <init>() -> <init>
    41:45:java.util.Map getModelMap(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> getModelMap
    51:53:java.net.InetAddress getLocalHost() -> getLocalHost
    58:61:java.lang.String getLocalHostAddr() -> getLocalHostAddr
    65:67:java.lang.String getDomainName(javax.servlet.http.HttpServletRequest,boolean) -> getDomainName
    72:82:java.lang.String getDomainName(java.lang.String,boolean) -> getDomainName
    87:92:java.lang.String getContextPath(javax.servlet.http.HttpServletRequest) -> getContextPath
    98:108:java.lang.String getServletPath(javax.servlet.http.HttpServletRequest) -> getServletPath
    115:120:architecture.ee.util.OutputFormat getOutputFormat(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> getOutputFormat
    124:124:architecture.ee.web.util.UAgentInfo getUserAgentInfo(javax.servlet.http.HttpServletRequest) -> getUserAgentInfo
    36:36:void <clinit>() -> <clinit>
architecture.ee.web.util.UAgentInfo -> architecture.ee.web.util.UAgentInfo:
    java.lang.String userAgent -> a
    java.lang.String httpAccept -> b
    java.lang.String engineWebKit -> engineWebKit
    java.lang.String deviceAndroid -> deviceAndroid
    java.lang.String deviceIphone -> deviceIphone
    java.lang.String deviceIpod -> deviceIpod
    java.lang.String deviceSymbian -> deviceSymbian
    java.lang.String deviceS60 -> deviceS60
    java.lang.String deviceS70 -> deviceS70
    java.lang.String deviceS80 -> deviceS80
    java.lang.String deviceS90 -> deviceS90
    java.lang.String deviceWinMob -> deviceWinMob
    java.lang.String deviceWindows -> deviceWindows
    java.lang.String deviceIeMob -> deviceIeMob
    java.lang.String enginePie -> enginePie
    java.lang.String deviceBB -> deviceBB
    java.lang.String vndRIM -> vndRIM
    java.lang.String deviceBBStorm -> deviceBBStorm
    java.lang.String devicePalm -> devicePalm
    java.lang.String deviceWebOS -> deviceWebOS
    java.lang.String engineBlazer -> engineBlazer
    java.lang.String engineXiino -> engineXiino
    java.lang.String vndwap -> vndwap
    java.lang.String wml -> wml
    java.lang.String deviceBrew -> deviceBrew
    java.lang.String deviceDanger -> deviceDanger
    java.lang.String deviceHiptop -> deviceHiptop
    java.lang.String devicePlaystation -> devicePlaystation
    java.lang.String deviceNintendoDs -> deviceNintendoDs
    java.lang.String deviceNintendo -> deviceNintendo
    java.lang.String deviceWii -> deviceWii
    java.lang.String deviceXbox -> deviceXbox
    java.lang.String deviceArchos -> deviceArchos
    java.lang.String engineOpera -> engineOpera
    java.lang.String engineNetfront -> engineNetfront
    java.lang.String engineUpBrowser -> engineUpBrowser
    java.lang.String engineOpenWeb -> engineOpenWeb
    java.lang.String deviceMidp -> deviceMidp
    java.lang.String uplink -> uplink
    java.lang.String devicePda -> devicePda
    java.lang.String mini -> mini
    java.lang.String mobile -> mobile
    java.lang.String mobi -> mobi
    java.lang.String maemo -> maemo
    java.lang.String maemoTablet -> maemoTablet
    java.lang.String linux -> linux
    java.lang.String qtembedded -> qtembedded
    java.lang.String mylocom2 -> mylocom2
    java.lang.String manuSonyEricsson -> manuSonyEricsson
    java.lang.String manuericsson -> manuericsson
    java.lang.String manuSamsung1 -> manuSamsung1
    java.lang.String manuSony -> manuSony
    java.lang.String svcDocomo -> svcDocomo
    java.lang.String svcKddi -> svcKddi
    java.lang.String svcVodafone -> svcVodafone
    java.lang.String msie -> msie
    java.lang.String msie60 -> msie60
    java.lang.String msie61 -> msie61
    java.lang.String msie7 -> msie7
    java.lang.String msie8 -> msie8
    java.lang.String msie9 -> msie9
    java.lang.String firefox -> firefox
    java.lang.String safari -> safari
    java.lang.String chrome -> chrome
    java.lang.String opera -> opera
    java.lang.String windows -> windows
    32:131:void <init>(java.lang.String,java.lang.String) -> <init>
    140:141:void <init>(javax.servlet.http.HttpServletRequest) -> <init>
    147:147:java.lang.String getUserAgent() -> getUserAgent
    154:154:java.lang.String getHttpAccept() -> getHttpAccept
    162:162:boolean detectIphone() -> detectIphone
    169:169:boolean detectIpod() -> detectIpod
    177:177:boolean detectIphoneOrIpod() -> detectIphoneOrIpod
    184:184:boolean detectAndroid() -> detectAndroid
    192:192:boolean detectAndroidWebKit() -> detectAndroidWebKit
    199:199:boolean detectWebkit() -> detectWebkit
    207:207:boolean detectS60OssBrowser() -> detectS60OssBrowser
    217:217:boolean detectSymbianOS() -> detectSymbianOS
    228:228:boolean detectWindowsMobile() -> detectWindowsMobile
    238:238:boolean detectBlackBerry() -> detectBlackBerry
    246:246:boolean detectBlackBerryTouch() -> detectBlackBerryTouch
    254:260:boolean detectPalmOS() -> detectPalmOS
    268:268:boolean detectPalmWebOS() -> detectPalmWebOS
    276:276:boolean detectSmartphone() -> detectSmartphone
    290:290:boolean detectBrewDevice() -> detectBrewDevice
    297:297:boolean detectDangerHiptop() -> detectDangerHiptop
    305:305:boolean detectOperaMobile() -> detectOperaMobile
    312:312:boolean detectWapWml() -> detectWapWml
    322:349:boolean detectMobileQuick() -> detectMobileQuick
    356:356:boolean detectSonyPlaystation() -> detectSonyPlaystation
    363:363:boolean detectNintendo() -> detectNintendo
    371:371:boolean detectXbox() -> detectXbox
    378:378:boolean detectGameConsole() -> detectGameConsole
    385:385:boolean detectMidpCapable() -> detectMidpCapable
    392:392:boolean detectMaemoTablet() -> detectMaemoTablet
    399:399:boolean detectArchos() -> detectArchos
    407:407:boolean detectSonyMylo() -> detectSonyMylo
    420:420:boolean detectMobileLong() -> detectMobileLong
    427:427:boolean detectMSIE() -> detectMSIE
    431:431:boolean detectMSIE6() -> detectMSIE6
    435:435:boolean detectMSIE7() -> detectMSIE7
    439:439:boolean detectMSIE8() -> detectMSIE8
    443:443:boolean detectMSIE9() -> detectMSIE9
    447:447:boolean detectFirefox() -> detectFirefox
    451:451:boolean detectSafari() -> detectSafari
    455:455:boolean detectChrome() -> detectChrome
    459:459:boolean detectOpera() -> detectOpera
    463:463:boolean detectWindows() -> detectWindows
    477:477:boolean detectTierIphone() -> detectTierIphone
    486:486:boolean detectTierSmartphones() -> detectTierSmartphones
    495:495:boolean detectTierOtherPhones() -> detectTierOtherPhones
architecture.ee.web.util.WebApplicatioinConstants -> architecture.ee.web.util.WebApplicatioinConstants:
    java.lang.String THEMES_ROOT_ENV_KEY -> THEMES_ROOT_ENV_KEY
    java.lang.String THTMES_CACHE_TIMEOUT_PROP_NAME -> THTMES_CACHE_TIMEOUT_PROP_NAME
    java.lang.String THTMES_LOCATION_PROP_NAME -> THTMES_LOCATION_PROP_NAME
    java.lang.String THTMES_EXCLUDES_PATTERN_PARAMETER_NAME_PROP_NAME -> THTMES_EXCLUDES_PATTERN_PARAMETER_NAME_PROP_NAME
    java.lang.String THTMES_EXCLUDES_PATTERN_PARAMETER_VALUE_PROP_NAME -> THTMES_EXCLUDES_PATTERN_PARAMETER_VALUE_PROP_NAME
    java.lang.String THTMES_URI_HEADER_PROP_NAME -> THTMES_URI_HEADER_PROP_NAME
    java.lang.String ATTACHMENTS_MAX_ATTACHMENTS_PER_MESSAGE -> ATTACHMENTS_MAX_ATTACHMENTS_PER_MESSAGE
    java.lang.String ATTACHMENTS_MAX_ATTACHMENT_SIZE -> ATTACHMENTS_MAX_ATTACHMENT_SIZE
    java.lang.String VIEW_FREEMARKER_ENABLED -> VIEW_FREEMARKER_ENABLED
    java.lang.String VIEW_FREEMARKER_DEBUG -> VIEW_FREEMARKER_DEBUG
    java.lang.String VIEW_FREEMARKER_SOURCE_LOCATION -> VIEW_FREEMARKER_SOURCE_LOCATION
    java.lang.String VIEW_VELOCITY_ENABLED -> VIEW_VELOCITY_ENABLED
    java.lang.String VIEW_ATTRIBUTE -> VIEW_ATTRIBUTE
    java.lang.String MODEL_ATTRIBUTE -> MODEL_ATTRIBUTE
    40:41:void <clinit>() -> <clinit>
architecture.ee.web.util.WebApplicationHelper -> architecture.ee.web.util.WebApplicationHelper:
    27:27:void <init>() -> <init>
    31:31:architecture.common.lifecycle.ConfigService getConfigService() -> getConfigService
    35:35:java.lang.Object getComponent(java.lang.Class) -> getComponent
    39:39:java.lang.Object getComponent(java.lang.String,java.lang.Class) -> getComponent
    43:44:void autowireComponent(java.lang.Object) -> autowireComponent
    47:47:architecture.common.lifecycle.State getState() -> getState
    51:51:boolean isReady() -> isReady
    55:55:java.lang.String getApplicationProperty(java.lang.String,java.lang.String) -> getApplicationProperty
    59:59:boolean getApplicationBooleanProperty(java.lang.String,boolean) -> getApplicationBooleanProperty
    63:63:int getApplicationIntProperty(java.lang.String,int) -> getApplicationIntProperty
    67:67:java.util.Locale getLocale() -> getLocale
    71:71:architecture.common.event.api.EventPublisher getEventPublisher() -> getEventPublisher
architecture.ee.web.util.WebSiteUtils -> architecture.ee.web.util.WebSiteUtils:
    java.lang.String MAIN_PAGE_VIEW_PREFIX -> MAIN_PAGE_VIEW_PREFIX
    org.apache.commons.logging.Log log -> a
    43:44:void <init>() -> <init>
    47:47:architecture.ee.web.logo.LogoManager getLogoManager() -> getLogoManager
    51:51:architecture.ee.web.site.WebSiteManager getWebSiteManager() -> getWebSiteManager
    55:71:architecture.ee.web.site.WebSite getWebSite(javax.servlet.http.HttpServletRequest) -> getWebSite
    75:75:java.lang.Long getDefaultWebSiteId() -> getDefaultWebSiteId
    79:80:architecture.ee.web.site.WebSite getDefaultWebSite() -> getDefaultWebSite
    84:84:architecture.ee.web.navigator.MenuRepository getMenuRepository() -> getMenuRepository
    88:88:java.lang.Long getDefaultMenuId() -> getDefaultMenuId
    92:92:architecture.ee.web.navigator.Menu getDefaultMenu() -> getDefaultMenu
    96:96:architecture.ee.web.navigator.Menu getMenu(long) -> getMenu
    100:100:architecture.ee.web.navigator.MenuComponent getMenuComponent(java.lang.String) -> getMenuComponent
    104:104:architecture.ee.web.navigator.MenuComponent getMenuComponent(java.lang.String,java.lang.String) -> getMenuComponent
    108:111:architecture.ee.web.navigator.MenuComponent getMenuComponent(architecture.ee.web.navigator.Menu,java.lang.String) -> getMenuComponent
    116:139:architecture.ee.web.navigator.MenuComponent getMenuComponent(architecture.ee.web.navigator.MenuComponent,java.lang.String) -> getMenuComponent
    143:173:architecture.ee.web.navigator.MenuComponent getMenuComponent(architecture.ee.web.navigator.Menu,java.lang.String,java.lang.String) -> getMenuComponent
    178:186:boolean isUserAccessAllowed(architecture.ee.web.navigator.MenuComponent) -> isUserAccessAllowed
    190:198:boolean isUserAccessAllowed(javax.servlet.http.HttpServletRequest,architecture.ee.web.navigator.MenuComponent) -> isUserAccessAllowed
    202:205:architecture.ee.web.navigator.Menu getWebSiteMenu(architecture.ee.web.site.WebSite) -> getWebSiteMenu
    209:209:boolean hasLogo(architecture.ee.web.site.WebSite) -> hasLogo
    213:214:java.util.Set getMenuNames(architecture.ee.web.site.WebSite) -> getMenuNames
    218:218:boolean isAllowedSignIn(architecture.ee.web.site.WebSite) -> isAllowedSignIn
    222:222:boolean isAllowedSignup(architecture.ee.web.site.WebSite) -> isAllowedSignup
    226:226:boolean isAllowedSocialConnect(architecture.ee.web.site.WebSite) -> isAllowedSocialConnect
    230:231:void setIsAllowedSignIn(architecture.ee.web.site.WebSite,boolean) -> setIsAllowedSignIn
    234:235:void setIsAllowedSignup(architecture.ee.web.site.WebSite,boolean) -> setIsAllowedSignup
    238:239:void setIsAllowedSocialConnect(architecture.ee.web.site.WebSite,boolean) -> setIsAllowedSocialConnect
    242:244:void setMainTemplate(architecture.ee.web.site.WebSite,java.lang.String) -> setMainTemplate
    41:41:void <clinit>() -> <clinit>
architecture.ee.web.util.tree.Node -> architecture.ee.web.util.tree.Node:
    java.lang.Object data -> data
    java.util.List children -> children
    31:32:void <init>() -> <init>
    41:43:void <init>(java.lang.Object) -> <init>
    54:57:java.util.List getChildren() -> getChildren
    68:69:void setChildren(java.util.List) -> setChildren
    77:80:int getNumberOfChildren() -> getNumberOfChildren
    91:95:void addChild(architecture.ee.web.util.tree.Node) -> addChild
    110:118:void insertChildAt(int,architecture.ee.web.util.tree.Node) -> insertChildAt
    129:130:void removeChildAt(int) -> removeChildAt
    133:133:java.lang.Object getData() -> getData
    137:138:void setData(java.lang.Object) -> setData
    141:152:java.lang.String toString() -> toString
architecture.ee.web.util.tree.Tree -> architecture.ee.web.util.tree.Tree:
    architecture.ee.web.util.tree.Node rootElement -> a
    30:31:void <init>() -> <init>
    38:38:architecture.ee.web.util.tree.Node getRootElement() -> getRootElement
    46:47:void setRootElement(architecture.ee.web.util.tree.Node) -> setRootElement
    55:57:java.util.List toList() -> toList
    66:66:java.lang.String toString() -> toString
    77:81:void walk(architecture.ee.web.util.tree.Node,java.util.List) -> a
architecture.ee.web.view.document.AbstractPdfView -> architecture.ee.web.view.document.AbstractPdfView:
    39:41:void <init>() -> <init>
    46:46:boolean generatesDownloadContent() -> generatesDownloadContent
    54:69:void renderMergedOutputModel(java.util.Map,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> renderMergedOutputModel
    79:79:com.itextpdf.text.Document newDocument() -> newDocument
    90:90:com.itextpdf.text.pdf.PdfWriter newWriter(com.itextpdf.text.Document,java.io.OutputStream) -> newWriter
    111:112:void prepareWriter(java.util.Map,com.itextpdf.text.pdf.PdfWriter,javax.servlet.http.HttpServletRequest) -> prepareWriter
    125:125:int getViewerPreferences() -> getViewerPreferences
    147:147:void buildPdfMetadata(java.util.Map,com.itextpdf.text.Document,javax.servlet.http.HttpServletRequest) -> buildPdfMetadata
    void buildPdfDocument(java.util.Map,com.itextpdf.text.Document,com.itextpdf.text.pdf.PdfWriter,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> buildPdfDocument
architecture.ee.web.view.document.ExcelView -> architecture.ee.web.view.document.ExcelView:
    26:26:void <init>() -> <init>
    34:34:void buildExcelDocument(java.util.Map,org.apache.poi.hssf.usermodel.HSSFWorkbook,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> buildExcelDocument
architecture.ee.web.view.document.PdfView -> architecture.ee.web.view.document.PdfView:
    26:26:void <init>() -> <init>
    36:36:void buildPdfDocument(java.util.Map,com.itextpdf.text.Document,com.itextpdf.text.pdf.PdfWriter,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> buildPdfDocument
architecture.ee.web.view.freemarker.ExtendedFreeMarkerView -> architecture.ee.web.view.freemarker.ExtendedFreeMarkerView:
    32:33:void <init>() -> <init>
    36:38:void exposeHelpers(java.util.Map,javax.servlet.http.HttpServletRequest) -> exposeHelpers
architecture.ee.web.view.freemarker.ExtendedTemplateLoader -> architecture.ee.web.view.freemarker.ExtendedTemplateLoader:
    org.apache.commons.logging.Log log -> a
    boolean SEP_IS_SLASH -> a
    net.sf.ehcache.Cache templateListCache -> a
    43:51:void <init>() -> <init>
    43:55:void <init>(java.io.File,boolean) -> <init>
    43:59:void <init>(java.io.File) -> <init>
    63:66:long getLastModified(java.lang.Object) -> getLastModified
    73:76:java.io.Reader getReader(java.lang.Object,java.lang.String) -> getReader
    82:87:void closeTemplateSource(java.lang.Object) -> closeTemplateSource
    92:119:java.lang.Object findTemplateSource(java.lang.String) -> findTemplateSource
    150:150:architecture.common.user.User getUser() -> getUser
    159:159:net.sf.ehcache.Cache getTemplateListCache() -> getTemplateListCache
    166:167:void setTemplateListCache(net.sf.ehcache.Cache) -> setTemplateListCache
    172:172:boolean isCacheSet() -> isCacheSet
    177:185:void initialize() -> initialize
    188:188:boolean isDatabasePersistence() -> isDatabasePersistence
    192:192:boolean isCustomizedEnabled() -> isCustomizedEnabled
    45:45:void <clinit>() -> <clinit>
architecture.ee.web.view.freemarker.FreeMarkerConfigurer -> architecture.ee.web.view.freemarker.FreeMarkerConfigurer:
    freemarker.template.Configuration configuration -> a
    freemarker.ext.jsp.TaglibFactory taglibFactory -> a
    architecture.common.lifecycle.ConfigService configService -> a
    50:50:void <init>() -> <init>
    60:61:void setConfigService(architecture.common.lifecycle.ConfigService) -> setConfigService
    73:74:void setConfiguration(freemarker.template.Configuration) -> setConfiguration
    80:81:void setServletContext(javax.servlet.ServletContext) -> setServletContext
    93:109:void afterPropertiesSet() -> afterPropertiesSet
    112:126:java.io.File getCustomizedTemplateHome() -> getCustomizedTemplateHome
    130:130:boolean isCustomizedEnabled() -> isCustomizedEnabled
    140:142:void postProcessTemplateLoaders(java.util.List) -> postProcessTemplateLoaders
    153:160:java.lang.String[] getFreemarkerSourceLoactions() -> getFreemarkerSourceLoactions
    165:187:void setTemplateLoaderPaths(java.lang.String[]) -> setTemplateLoaderPaths
    193:193:freemarker.template.Configuration getConfiguration() -> getConfiguration
    200:200:freemarker.ext.jsp.TaglibFactory getTaglibFactory() -> getTaglibFactory
    205:229:freemarker.cache.TemplateLoader getTemplateLoaderForPath(java.lang.String) -> getTemplateLoaderForPath
architecture.ee.web.view.freemarker.FreeMarkerHelper -> architecture.ee.web.view.freemarker.FreeMarkerHelper:
    26:28:void <init>() -> <init>
    36:66:void populateStatics(freemarker.ext.beans.BeansWrapper,java.util.Map) -> populateStatics
architecture.ee.web.view.freemarker.FreeMarkerViewResolver -> architecture.ee.web.view.freemarker.FreeMarkerViewResolver:
    21:21:void <init>() -> <init>
    26:26:org.springframework.web.servlet.view.AbstractUrlBasedView buildView(java.lang.String) -> buildView
architecture.ee.web.view.freemarker.TemplateAware -> architecture.ee.web.view.freemarker.TemplateAware:
    java.lang.Long getTemplateId() -> getTemplateId
    java.lang.String getTemplateType() -> getTemplateType
    architecture.ee.web.template.Template getTargetTemplate() -> getTargetTemplate
architecture.ee.web.view.image.ImageView -> architecture.ee.web.view.image.ImageView:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    byte[] imageData -> a
    java.lang.String contentType -> a
    35:38:void <init>(byte[],java.lang.String) -> <init>
    42:45:void render(java.util.Map,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> render
    48:48:java.lang.String getContentType() -> getContentType
architecture.ee.web.view.json.JacksonJsonView -> architecture.ee.web.view.json.JacksonJsonView:
    java.lang.String DEFAULT_CONTENT_TYPE -> DEFAULT_CONTENT_TYPE
    com.fasterxml.jackson.databind.ObjectMapper objectMapper -> a
    com.fasterxml.jackson.core.JsonEncoding encoding -> a
    boolean prefixJson -> a
    java.util.Set modelKeys -> a
    boolean extractValueFromSingleKeyModel -> b
    boolean disableCaching -> c
    51:70:void <init>() -> <init>
    83:85:void setObjectMapper(com.fasterxml.jackson.databind.ObjectMapper) -> setObjectMapper
    92:94:void setEncoding(com.fasterxml.jackson.core.JsonEncoding) -> setEncoding
    105:106:void setPrefixJson(boolean) -> setPrefixJson
    113:114:void setModelKey(java.lang.String) -> setModelKey
    121:122:void setModelKeys(java.util.Set) -> setModelKeys
    128:128:java.util.Set getModelKeys() -> getModelKeys
    138:139:void setRenderedAttributes(java.util.Set) -> setRenderedAttributes
    147:147:java.util.Set getRenderedAttributes() -> getRenderedAttributes
    158:159:void setExtractValueFromSingleKeyModel(boolean) -> setExtractValueFromSingleKeyModel
    166:167:void setDisableCaching(boolean) -> setDisableCaching
    172:179:void prepareResponse(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> prepareResponse
    185:191:void renderMergedOutputModel(java.util.Map,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> renderMergedOutputModel
    202:209:java.lang.Object filterModel(java.util.Map) -> filterModel
architecture.ee.web.view.json.JsonView -> architecture.ee.web.view.json.JsonView:
    19:19:void <init>() -> <init>
architecture.ee.web.view.velocity.VelocityViewResolver -> architecture.ee.web.view.velocity.VelocityViewResolver:
    19:19:void <init>() -> <init>
architecture.ee.web.ws.Error -> architecture.ee.web.ws.Error:
    java.lang.String locale -> a
    int code -> a
    java.lang.String exceptionClassName -> b
    java.lang.String exceptionMessage -> c
    31:47:void <init>(java.lang.Throwable) -> <init>
    50:51:void <init>() -> <init>
    57:57:java.lang.String getLocale() -> getLocale
    64:65:void setLocale(java.lang.String) -> setLocale
    71:71:int getCode() -> getCode
    78:79:void setCode(int) -> setCode
    85:85:java.lang.String getException() -> getException
    92:93:void setException(java.lang.String) -> setException
    99:99:java.lang.String getMessage() -> getMessage
    106:107:void setMessage(java.lang.String) -> setMessage
architecture.ee.web.ws.MenuItem -> architecture.ee.web.ws.MenuItem:
    java.lang.String menu -> a
    java.lang.String name -> b
    java.lang.String title -> c
    java.lang.String page -> d
    java.lang.String description -> e
    java.lang.String icon -> f
    java.lang.String roles -> g
    boolean last -> a
    int depth -> a
    boolean child -> b
    boolean progenitor -> c
    28:44:void <init>() -> <init>
    47:59:void <init>(architecture.ee.web.navigator.MenuComponent,java.lang.String,boolean) -> <init>
    67:67:boolean isProgenitor() -> isProgenitor
    74:75:void setProgenitor(boolean) -> setProgenitor
    81:81:boolean isChild() -> isChild
    88:89:void setChild(boolean) -> setChild
    95:95:java.lang.String getMenu() -> getMenu
    103:104:void setMenu(java.lang.String) -> setMenu
    110:110:java.lang.String getName() -> getName
    118:119:void setName(java.lang.String) -> setName
    125:125:java.lang.String getTitle() -> getTitle
    133:134:void setTitle(java.lang.String) -> setTitle
    140:140:java.lang.String getPage() -> getPage
    148:149:void setPage(java.lang.String) -> setPage
    155:155:java.lang.String getDescription() -> getDescription
    163:164:void setDescription(java.lang.String) -> setDescription
    170:170:java.lang.String getIcon() -> getIcon
    178:179:void setIcon(java.lang.String) -> setIcon
    185:185:java.lang.String getRoles() -> getRoles
    193:194:void setRoles(java.lang.String) -> setRoles
    200:200:boolean isLast() -> isLast
    208:209:void setLast(boolean) -> setLast
    215:215:int getDepth() -> getDepth
    223:224:void setDepth(int) -> setDepth
architecture.ee.web.ws.Property -> architecture.ee.web.ws.Property:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> a
    java.lang.Object value -> a
    36:37:void <init>() -> <init>
    39:42:void <init>(java.lang.String,java.lang.Object) -> <init>
    46:46:java.lang.String getName() -> getName
    50:51:void setName(java.lang.String) -> setName
    54:54:java.lang.Object getValue() -> getValue
    58:59:void setValue(java.lang.Object) -> setValue
architecture.ee.web.ws.Result -> architecture.ee.web.ws.Result:
    boolean success -> a
    architecture.ee.web.ws.Error error -> a
    java.lang.Integer count -> a
    24:27:void <init>() -> <init>
    33:37:void <init>(java.lang.Integer) -> <init>
    44:46:void <init>(boolean) -> <init>
    52:52:boolean isSuccess() -> isSuccess
    59:59:java.lang.Integer getCount() -> getCount
    67:68:void setCount(java.lang.Integer) -> setCount
    75:76:void setSuccess(boolean) -> setSuccess
    81:81:architecture.ee.web.ws.Error getError() -> getError
    87:88:void setError(architecture.ee.web.ws.Error) -> setError
    91:91:architecture.ee.web.ws.Result newResult() -> newResult
    95:95:architecture.ee.web.ws.Result newResult(int) -> newResult
    99:101:architecture.ee.web.ws.Result newResult(java.lang.Throwable) -> newResult
architecture.ee.web.ws.StringProperty -> architecture.ee.web.ws.StringProperty:
    java.lang.String name -> a
    java.lang.String value -> b
    23:25:void <init>() -> <init>
    31:31:java.lang.String getName() -> getName
    39:40:void setName(java.lang.String) -> setName
    46:46:java.lang.String getValue() -> getValue
    54:55:void setValue(java.lang.String) -> setValue
    62:65:void <init>(java.lang.String,java.lang.String) -> <init>
architecture.ee.web.ws.Usage -> architecture.ee.web.ws.Usage:
    java.lang.String name -> a
    long size -> a
    java.lang.String readableSize -> b
    34:38:void <init>(java.lang.String,long) -> <init>
    41:45:void <init>(java.lang.String,long,boolean) -> <init>
    51:51:java.lang.String getName() -> getName
    58:58:java.lang.String getReadableSize() -> getReadableSize
    65:65:long getSize() -> getSize
    70:74:java.lang.String readableFileSize(long) -> readableFileSize
